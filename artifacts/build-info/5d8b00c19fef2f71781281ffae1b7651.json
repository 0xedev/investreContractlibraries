{
	"id": "5d8b00c19fef2f71781281ffae1b7651",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/**\n * @title FarcasterRegistry\n * @notice Canonical registry mapping Farcaster IDs (FIDs) <-> Owners, with optional vault association.\n *         Supports meta-transactions via EIP-712 signatures (link, unlink, transfer).\n * CA: 0x766186d46a9c93712eac4Bf37000f732A53D763E\n *  Guarantees:\n *   - A FID maps to at most one owner.\n *   - An owner can link at most one FID (configurable via code change if multi-FID per owner is needed).\n *\n *  Flows:\n *   - Direct tx:   owner calls link(fid, vault) / unlink(fid) / transfer(fid, newOwner, newVault).\n *   - Meta-tx:     relayer calls linkWithSig / unlinkWithSig / transferWithSig using owner's EIP-712 signature.\n *\n *  Optional:\n *   - setProofVerifier() lets an external verifier contract authorize linking by calling linkWithProof.\n */\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {ECDSA} from \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\ninterface IFarcasterProofVerifier {\n    function verifyLink(address owner, uint256 fid, bytes calldata proof) external view returns (bool);\n}\n\nerror ZeroAddress();\nerror FidAlreadyLinked();\nerror FidNotLinked();\nerror OwnerAlreadyLinked();\nerror NotFidOwner();\nerror InvalidSigner();\nerror SignatureExpired();\nerror Replay();\nerror VerifierRejected();\nerror VaultAlreadySet();\n\ncontract FarcasterRegistry is Ownable {\n    using ECDSA for bytes32;\n\n    // -------------------------\n    // Storage\n    // -------------------------\n\n    /// @notice FID -> owner\n    mapping(uint256 => address) public fidToOwner;\n\n    /// @notice owner -> FID (0 if none)\n    mapping(address => uint256) public ownerToFid;\n\n    /// @notice FID -> vault (optional convenience pointer)\n    mapping(uint256 => address) public fidToVault;\n\n    /// @notice Nonces for EIP-712 (per-owner)\n    mapping(address => uint256) public nonces;\n\n    /// @notice Optional external verifier for offchain proofs\n    IFarcasterProofVerifier public proofVerifier;\n\n    // -------------------------\n    // Events\n    // -------------------------\n    event Linked(uint256 indexed fid, address indexed owner, address vault);\n    event Unlinked(uint256 indexed fid, address indexed owner);\n    event Transferred(uint256 indexed fid, address indexed oldOwner, address indexed newOwner, address newVault);\n    event ProofVerifierUpdated(address indexed verifier);\n\n    // -------------------------\n    // EIP-712 Domain\n    // -------------------------\n    bytes32 public immutable DOMAIN_SEPARATOR;\n\n    // keccak256(\"Link(address owner,uint256 fid,address vault,uint256 nonce,uint256 deadline)\")\n    bytes32 public constant LINK_TYPEHASH =\n        keccak256(\"Link(address owner,uint256 fid,address vault,uint256 nonce,uint256 deadline)\");\n\n    // keccak256(\"Unlink(address owner,uint256 fid,uint256 nonce,uint256 deadline)\")\n    bytes32 public constant UNLINK_TYPEHASH =\n        keccak256(\"Unlink(address owner,uint256 fid,uint256 nonce,uint256 deadline)\");\n\n    // keccak256(\"Transfer(address owner,uint256 fid,address newOwner,address newVault,uint256 nonce,uint256 deadline)\")\n    bytes32 public constant TRANSFER_TYPEHASH =\n        keccak256(\"Transfer(address owner,uint256 fid,address newOwner,address newVault,uint256 nonce,uint256 deadline)\");\n\n    constructor() Ownable(msg.sender) {\n        uint256 chainId;\n        assembly {\n            chainId := chainid()\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                // EIP-712 Domain: name, version, chainId, verifyingContract\n                keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                keccak256(bytes(\"FarcasterRegistry\")),\n                keccak256(bytes(\"1\")),\n                chainId,\n                address(this)\n            )\n        );\n    }\n\n    // =========================\n    // Admin\n    // =========================\n\n    /// @notice Set/replace external proof verifier\n    function setProofVerifier(address verifier) external onlyOwner {\n        proofVerifier = IFarcasterProofVerifier(verifier);\n        emit ProofVerifierUpdated(verifier);\n    }\n\n    // =========================\n    // Direct (EOA) flows\n    // =========================\n\n    /// @notice Link caller as the owner of `fid`, optionally storing a convenience `vault` address.\n    function link(uint256 fid, address vault) external {\n        _link(msg.sender, fid, vault);\n    }\n\n    /// @notice Unlink caller from their `fid`.\n    function unlink(uint256 fid) external {\n        if (fidToOwner[fid] != msg.sender) revert NotFidOwner();\n        _unlink(fid, msg.sender);\n    }\n\n    /// @notice Transfer `fid` from caller to `newOwner`, optionally updating `newVault`.\n    function transfer(uint256 fid, address newOwner, address newVault) external {\n        if (fidToOwner[fid] != msg.sender) revert NotFidOwner();\n        _transfer(fid, msg.sender, newOwner, newVault);\n    }\n\n    // =========================\n    // Meta-tx flows (EIP-712)\n    // =========================\n\n    function linkWithSig(\n        address owner_,\n        uint256 fid,\n        address vault,\n        uint256 deadline,\n        bytes calldata sig\n    ) external {\n        _checkDeadline(deadline);\n        _verifyAndBump(owner_, _hashLink(owner_, fid, vault, nonces[owner_], deadline), sig);\n        _link(owner_, fid, vault);\n    }\n\n    function unlinkWithSig(\n        address owner_,\n        uint256 fid,\n        uint256 deadline,\n        bytes calldata sig\n    ) external {\n        _checkDeadline(deadline);\n        _verifyAndBump(owner_, _hashUnlink(owner_, fid, nonces[owner_], deadline), sig);\n\n        if (fidToOwner[fid] != owner_) revert NotFidOwner();\n        _unlink(fid, owner_);\n    }\n\n    function transferWithSig(\n        address owner_,\n        uint256 fid,\n        address newOwner,\n        address newVault,\n        uint256 deadline,\n        bytes calldata sig\n    ) external {\n        _checkDeadline(deadline);\n        _verifyAndBump(owner_, _hashTransfer(owner_, fid, newOwner, newVault, nonces[owner_], deadline), sig);\n\n        if (fidToOwner[fid] != owner_) revert NotFidOwner();\n        _transfer(fid, owner_, newOwner, newVault);\n    }\n\n    // =========================\n    // Proof-based linking\n    // =========================\n\n    /// @notice Link using an external proof verifier (e.g., Warpcast/Neynar signature proof).\n    ///         Callable by anyone; proofVerifier decides validity.\n    function linkWithProof(address owner_, uint256 fid, address vault, bytes calldata proof) external {\n        IFarcasterProofVerifier v = proofVerifier;\n        if (address(v) == address(0)) revert ZeroAddress();\n        if (!v.verifyLink(owner_, fid, proof)) revert VerifierRejected();\n        _link(owner_, fid, vault);\n    }\n\n    // =========================\n    // Views\n    // =========================\n\n    function getOwnerByFid(uint256 fid) external view returns (address) {\n        return fidToOwner[fid];\n    }\n\n    function getFidByOwner(address owner_) external view returns (uint256) {\n        return ownerToFid[owner_];\n    }\n\n    function getVaultByFid(uint256 fid) external view returns (address) {\n        return fidToVault[fid];\n    }\n\n    // =========================\n    // Internal logic\n    // =========================\n\n    function _link(address owner_, uint256 fid, address vault) internal {\n        if (owner_ == address(0)) revert ZeroAddress();\n        if (fid == 0) revert FidNotLinked(); // disallow fid=0\n        if (fidToOwner[fid] != address(0)) revert FidAlreadyLinked();\n        if (ownerToFid[owner_] != 0) revert OwnerAlreadyLinked();\n\n        fidToOwner[fid] = owner_;\n        ownerToFid[owner_] = fid;\n\n        if (vault != address(0)) {\n            if (fidToVault[fid] != address(0)) revert VaultAlreadySet();\n            fidToVault[fid] = vault;\n        }\n\n        emit Linked(fid, owner_, vault);\n    }\n\n    function _unlink(uint256 fid, address owner_) internal {\n        delete fidToOwner[fid];\n        delete fidToVault[fid];\n        delete ownerToFid[owner_];\n        emit Unlinked(fid, owner_);\n    }\n\n    function _transfer(uint256 fid, address oldOwner, address newOwner, address newVault) internal {\n        if (newOwner == address(0)) revert ZeroAddress();\n        if (ownerToFid[newOwner] != 0) revert OwnerAlreadyLinked();\n\n        // Clear old mapping\n        delete ownerToFid[oldOwner];\n\n        // Set new mapping\n        fidToOwner[fid] = newOwner;\n        ownerToFid[newOwner] = fid;\n\n        // Update optional vault pointer (0 to keep previous cleared, non-zero to set new)\n        if (newVault != address(0)) {\n            fidToVault[fid] = newVault;\n        } else {\n            // if not provided, clear to avoid stale vault pointers\n            delete fidToVault[fid];\n        }\n\n        emit Transferred(fid, oldOwner, newOwner, newVault);\n    }\n\n    // =========================\n    // EIP-712 helpers\n    // =========================\n\n    function _hashLink(\n        address owner_,\n        uint256 fid,\n        address vault,\n        uint256 nonce,\n        uint256 deadline\n    ) internal view returns (bytes32) {\n        bytes32 structHash = keccak256(abi.encode(LINK_TYPEHASH, owner_, fid, vault, nonce, deadline));\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash));\n    }\n\n    function _hashUnlink(\n        address owner_,\n        uint256 fid,\n        uint256 nonce,\n        uint256 deadline\n    ) internal view returns (bytes32) {\n        bytes32 structHash = keccak256(abi.encode(UNLINK_TYPEHASH, owner_, fid, nonce, deadline));\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash));\n    }\n\n    function _hashTransfer(\n        address owner_,\n        uint256 fid,\n        address newOwner,\n        address newVault,\n        uint256 nonce,\n        uint256 deadline\n    ) internal view returns (bytes32) {\n        bytes32 structHash =\n            keccak256(abi.encode(TRANSFER_TYPEHASH, owner_, fid, newOwner, newVault, nonce, deadline));\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash));\n    }\n\n    function _verifyAndBump(address expectedSigner, bytes32 digest, bytes calldata sig) internal {\n        (address recovered,) = _recover(digest, sig);\n        if (recovered == address(0) || recovered != expectedSigner) revert InvalidSigner();\n\n        uint256 n = nonces[expectedSigner];\n        // The nonce used in the hash is the *current* nonce; bump now.\n        unchecked {\n            nonces[expectedSigner] = n + 1;\n        }\n    }\n\n    function _recover(bytes32 digest, bytes calldata sig) internal pure returns (address, bytes32) {\n        if (sig.length != 65) return (address(0), bytes32(0));\n        bytes32 r;\n        bytes32 s;\n        uint8 v;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            r := calldataload(sig.offset)\n            s := calldataload(add(sig.offset, 32))\n            v := byte(0, calldataload(add(sig.offset, 64)))\n        }\n        return (ECDSA.recover(digest, v, r, s), r);\n    }\n\n    function _checkDeadline(uint256 deadline) internal view {\n        if (block.timestamp > deadline) revert SignatureExpired();\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7814  library ECDSA {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7814  library ECDSA {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220528573ba262f6b40f31cded9c3a9149b166cb479328a54aa4cd5e1dbb50c149264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220528573ba262f6b40f31cded9c3a9149b166cb479328a54aa4cd5e1dbb50c149264736f6c63430008180033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE DUP6 PUSH20 0xBA262F6B40F31CDED9C3A9149B166CB479328A54 0xAA 0x4C 0xD5 0xE1 0xDB 0xB5 0xC EQ SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "344:7470:2:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea2646970667358221220528573ba262f6b40f31cded9c3a9149b166cb479328a54aa4cd5e1dbb50c149264736f6c63430008180033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE DUP6 PUSH20 0xBA262F6B40F31CDED9C3A9149B166CB479328A54 0xAA 0x4C 0xD5 0xE1 0xDB 0xB5 0xC EQ SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "344:7470:2:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "library_deploy_address"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "RETURN",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "REVERT",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220528573ba262f6b40f31cded9c3a9149b166cb479328a54aa4cd5e1dbb50c149264736f6c63430008180033",
									".code": [
										{
											"begin": 344,
											"end": 7814,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol": {
				"FarcasterRegistry": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FidAlreadyLinked",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FidNotLinked",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotFidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerAlreadyLinked",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SignatureExpired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "VaultAlreadySet",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "VerifierRejected",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fid",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "Linked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "verifier",
									"type": "address"
								}
							],
							"name": "ProofVerifierUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fid",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newVault",
									"type": "address"
								}
							],
							"name": "Transferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fid",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "Unlinked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LINK_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TRANSFER_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UNLINK_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "fidToOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "fidToVault",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								}
							],
							"name": "getFidByOwner",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "fid",
									"type": "uint256"
								}
							],
							"name": "getOwnerByFid",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "fid",
									"type": "uint256"
								}
							],
							"name": "getVaultByFid",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "fid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "link",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "proof",
									"type": "bytes"
								}
							],
							"name": "linkWithProof",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								}
							],
							"name": "linkWithSig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "ownerToFid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proofVerifier",
							"outputs": [
								{
									"internalType": "contract IFarcasterProofVerifier",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "verifier",
									"type": "address"
								}
							],
							"name": "setProofVerifier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "fid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newVault",
									"type": "address"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newVault",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								}
							],
							"name": "transferWithSig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "fid",
									"type": "uint256"
								}
							],
							"name": "unlink",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								}
							],
							"name": "unlinkWithSig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n  0xa0\n  0x40\n  swap1\n  dup1\n  dup3\n  mstore\n  jumpi(tag_2, callvalue)\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":3326:3336  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  iszero\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_4\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n  dup1\n  sload\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":3326:3336  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n  dup3\n  and\n  dup2\n  or\n  dup4\n  sstore\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":3326:3336  msg.sender */\n  swap2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n  swap1\n  swap2\n  and\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n  0x11\n  0x20\n  dup3\n  mload\n  tag_6\n  dup2\n  tag_1\n  jump\t// in\ntag_6:\n  dup3\n  dup2\n  mstore\n  add\n  shl(0x78, 0x4661726361737465725265676973747279)\n  dup2\n  mstore\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":3695:3732  keccak256(bytes(\"FarcasterRegistry\")) */\n  keccak256\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n  0x01\n  0x20\n  dup4\n  mload\n  tag_7\n  dup2\n  tag_1\n  jump\t// in\ntag_7:\n  dup3\n  dup2\n  mstore\n  add\n  shl(0xf8, 0x31)\n  dup2\n  mstore\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":3750:3771  keccak256(bytes(\"1\")) */\n  keccak256\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n  dup3\n  mload\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":3477:3841  abi.encode(... */\n  swap1\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n  0x20\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":3477:3841  abi.encode(... */\n  dup3\n  add\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n  swap3\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":3582:3677  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n  dup5\n  mstore\n  dup5\n  dup4\n  add\n  mstore\n  0x60\n  dup3\n  add\n  mstore\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":3373:3426  assembly {... */\n  chainid\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n  0x80\n  dup3\n  add\n  mstore\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":3822:3826  this */\n  address\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n  0xa0\n  dup3\n  add\n  mstore\n  0xa0\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":3477:3841  abi.encode(... */\n  dup2\n  mstore\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n  0xc0\n  dup2\n  add\n  swap3\n  dup2\n  dup5\n  lt\n  0x01\n  dup1\n  0x40\n  shl\n  sub\n  dup6\n  gt\n  or\n  tag_8\n  jumpi\n  dup4\n  swap1\n  mstore\n  mload\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":3454:3851  keccak256(... */\n  swap1\n  keccak256\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n  0x80\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":3435:3851  DOMAIN_SEPARATOR = keccak256(... */\n  mstore\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  mload(0x80)\n  dup2\n  assignImmutable(\"0x9cdad53cb90fcd2d286d1b56be653be0d7f81d30eae9df6bb3cb2e68d4647bd0\")\n  return\ntag_8:\n  shl(0xe0, 0x4e487b71)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n  mstore\n  mstore(0x04, 0x41)\n  0x24\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_4:\n  shl(0xe0, 0x1e4fbdf7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n  mstore\n  0x24\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  revert\n    /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\ntag_2:\n  0x00\n  dup1\n  revert\ntag_1:\n  0x40\n  dup2\n  add\n  swap1\n  dup2\n  lt\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  or\n  tag_8\n  jumpi\n  0x40\n  mstore\n  jump\t// out\nstop\n\nsub_0: assembly {\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x80\n      0x40\n      swap1\n      dup1\n      dup3\n      mstore\n      0x04\n      swap1\n      dup2\n      calldatasize\n      lt\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0xbf26f4\n      eq\n      tag_18\n      jumpi\n      pop\n      dup1\n      0x1d59e7e8\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x48bb996c\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x65af7909\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x74e48cba\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x76b3c1be\n      eq\n      tag_56\n      jumpi\n      dup1\n      0x7b9cf4f3\n      eq\n      tag_48\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_36\n      jumpi\n      dup1\n      0x7fa417b3\n      eq\n      tag_38\n      jumpi\n      dup1\n      0x8989a842\n      eq\n      tag_40\n      jumpi\n      dup1\n      0x8a62bb16\n      eq\n      tag_46\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xbf74ae26\n      eq\n      tag_46\n      jumpi\n      dup1\n      0xc8b6a983\n      eq\n      tag_48\n      jumpi\n      dup1\n      0xccb570e3\n      eq\n      tag_50\n      jumpi\n      dup1\n      0xddbc4a4b\n      eq\n      tag_52\n      jumpi\n      dup1\n      0xdf6244db\n      eq\n      tag_54\n      jumpi\n      dup1\n      0xe2cc3d2f\n      eq\n      tag_56\n      jumpi\n      dup1\n      0xe477c7f7\n      eq\n      tag_58\n      jumpi\n      dup1\n      0xf1e023fd\n      eq\n      tag_60\n      jumpi\n      0xf2fde38b\n      eq\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x20))\n      tag_68\n      tag_1\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      swap1\n      tag_69\n      tag_11\n      jump\t// in\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      swap2\n      dup3\n      and\n      swap3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup4\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_70\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      pop\n      pop\n      sload(0x00)\n      dup3\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      dup3\n      and\n      or\n      0x00\n      sstore\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      dup1\n      log3\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_70:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      swap1\n      0x00\n      0x24\n      swap3\n      mload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      swap2\n      shl(0xe0, 0x1e4fbdf7)\n      dup4\n      mstore\n      dup3\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n    tag_66:\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      swap1\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x20))\n      dup2\n      calldataload\n      0x00\n      dup2\n      dup2\n      mstore\n      mstore(0x20, 0x01)\n      dup3\n      swap1\n      keccak256\n      sload\n      swap1\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4592:4602  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4573:4602  fidToOwner[fid] != msg.sender */\n      sub\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4569:4624  if (fidToOwner[fid] != msg.sender) revert NotFidOwner() */\n      tag_76\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4647:4657  msg.sender */\n      tag_78\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4592:4602  msg.sender */\n      caller\n      dup4\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4647:4657  msg.sender */\n      tag_9\n      jump\t// in\n    tag_78:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      stop\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4569:4624  if (fidToOwner[fid] != msg.sender) revert NotFidOwner() */\n    tag_76:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mload\n      shl(0xe2, 0x2ef5f69d)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4611:4624  NotFidOwner() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      swap1\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4611:4624  NotFidOwner() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n    tag_58:\n      pop\n      swap1\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0xc0))\n      tag_83\n      tag_1\n      jump\t// in\n    tag_83:\n      calldataload(0x24)\n      swap1\n      tag_84\n      tag_3\n      jump\t// in\n    tag_84:\n      calldataload(0x64)\n      swap4\n      swap1\n      swap3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      swap1\n      dup2\n      dup8\n      sub\n      tag_66\n      jumpi\n      calldataload(0x84)\n      swap2\n      0xffffffffffffffff\n      calldataload(0xa4)\n      dup2\n      dup2\n      gt\n      tag_66\n      jumpi\n      tag_89\n      swap1\n      calldatasize\n      swap1\n      dup13\n      add\n      tag_4\n      jump\t// in\n    tag_89:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":5984:5992  deadline */\n      swap3\n      swap1\n      swap2\n      tag_90\n      dup7\n      tag_6\n      jump\t// in\n    tag_90:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup10\n      dup6\n      dup11\n      and\n      swap7\n      dup8\n      0x00\n      mstore\n      dup14\n      0x20\n      mstore\n      dup9\n      0x00\n      keccak256\n      sload\n      dup10\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9981:10060  abi.encode(TRANSFER_TYPEHASH, owner_, fid, newOwner, newVault, nonce, deadline) */\n      swap5\n      dup9\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9981:10060  abi.encode(TRANSFER_TYPEHASH, owner_, fid, newOwner, newVault, nonce, deadline) */\n      dup8\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      swap5\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":3184:3297  keccak256(\"Transfer(address owner,uint256 fid,address newOwner,address newVault,uint256 nonce,uint256 deadline)\") */\n      0x7a00a9d047b8532e87561a4cfa9e3cf48a980f4df0d4fa2e76169a8d4d102dd5\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup7\n      mstore\n      dup12\n      dup14\n      dup10\n      add\n      mstore\n      dup14\n      0x60\n      dup10\n      add\n      mstore\n      and\n      0x80\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      mstore\n      0xc0\n      dup6\n      add\n      mstore\n      0xe0\n      dup5\n      add\n      mstore\n      0xe0\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9981:10060  abi.encode(TRANSFER_TYPEHASH, owner_, fid, newOwner, newVault, nonce, deadline) */\n      dup4\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x0100\n      dup4\n      add\n      swap2\n      dup4\n      dup4\n      lt\n      swap1\n      dup4\n      gt\n      or\n      tag_91\n      jumpi\n      dup2\n      dup9\n      mstore\n      dup3\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9971:10061  keccak256(abi.encode(TRANSFER_TYPEHASH, owner_, fid, newOwner, newVault, nonce, deadline)) */\n      swap1\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10088:10146  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash) */\n      0x0120\n      dup5\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      swap1\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10117:10133  DOMAIN_SEPARATOR */\n      immutable(\"0x9cdad53cb90fcd2d286d1b56be653be0d7f81d30eae9df6bb3cb2e68d4647bd0\")\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x0122\n      dup6\n      add\n      mstore\n      0x0142\n      swap1\n      swap4\n      add\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10088:10146  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash) */\n      0x42\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6100:6103  sig */\n      tag_94\n      swap4\n      swap3\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10088:10146  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash) */\n      swap1\n      tag_93\n      0x62\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup3\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10088:10146  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash) */\n      tag_5\n      jump\t// in\n    tag_93:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10078:10147  keccak256(abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash)) */\n      swap1\n      keccak256\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6100:6103  sig */\n      dup9\n      tag_8\n      jump\t// in\n    tag_94:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup4\n      0x00\n      mstore\n      mstore(0x20, 0x01)\n      dup3\n      0x00\n      keccak256\n      sload\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6119:6144  fidToOwner[fid] != owner_ */\n      sub\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6115:6166  if (fidToOwner[fid] != owner_) revert NotFidOwner() */\n      tag_96\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6209:6217  newVault */\n      pop\n      tag_78\n      swap5\n      pop\n      tag_12\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6115:6166  if (fidToOwner[fid] != owner_) revert NotFidOwner() */\n    tag_96:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mload\n      shl(0xe2, 0x2ef5f69d)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6153:6166  NotFidOwner() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup6\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6153:6166  NotFidOwner() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n    tag_91:\n      0x41\n      dup14\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore\n      revert(0x00, 0x24)\n    tag_56:\n      dup3\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_103\n      tag_1\n      jump\t// in\n    tag_103:\n      and\n      0x00\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1648:1693  mapping(address => uint256) public ownerToFid */\n      0x02\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup3\n      mstore\n      dup1\n      0x00\n      keccak256\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_54:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x20))\n      tag_108\n      tag_1\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_109\n      tag_11\n      jump\t// in\n    tag_109:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4069:4118  proofVerifier = IFarcasterProofVerifier(verifier) */\n      0x05\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      dup3\n      or\n      swap1\n      sstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4133:4163  ProofVerifierUpdated(verifier) */\n      0x9ba82601182e51f8dd35a545a13e9d8716495ee8d41c4f1b65fc97f97d661927\n      0x00\n      dup1\n      log2\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      stop\n    tag_52:\n      dup3\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      swap1\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":2696:2785  keccak256(\"Link(address owner,uint256 fid,address vault,uint256 nonce,uint256 deadline)\") */\n      0xa678f94f5bffc40cefaf81a99c9b64a42700e1fc99df73ce4ea5b0edb83c6fae\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup2\n      mstore\n      return\n    tag_50:\n      pop\n      swap1\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x60))\n      dup2\n      calldataload\n      tag_118\n      tag_2\n      jump\t// in\n    tag_118:\n      swap1\n      tag_119\n      tag_3\n      jump\t// in\n    tag_119:\n      0x00\n      dup3\n      dup2\n      mstore\n      mstore(0x20, 0x01)\n      dup5\n      swap1\n      keccak256\n      sload\n      swap1\n      swap4\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4870:4880  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4851:4880  fidToOwner[fid] != msg.sender */\n      sub\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4847:4902  if (fidToOwner[fid] != msg.sender) revert NotFidOwner() */\n      tag_120\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4870:4880  msg.sender */\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4949:4957  newVault */\n      tag_78\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4870:4880  msg.sender */\n      swap4\n      pop\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4949:4957  newVault */\n      swap1\n      tag_12\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4847:4902  if (fidToOwner[fid] != msg.sender) revert NotFidOwner() */\n    tag_120:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mload\n      shl(0xe2, 0x2ef5f69d)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4889:4902  NotFidOwner() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup5\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4889:4902  NotFidOwner() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n    tag_48:\n      pop\n      swap1\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      swap2\n      calldataload\n      0x00\n      mstore\n      0x01\n      dup3\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      0x00\n      keccak256\n      sload\n      and\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_46:\n      pop\n      swap1\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      swap2\n      calldataload\n      0x00\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1760:1805  mapping(uint256 => address) public fidToVault */\n      0x03\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup3\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      0x00\n      keccak256\n      sload\n      and\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_44:\n      dup3\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x00)\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_40:\n      pop\n      swap1\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0xa0))\n      tag_143\n      tag_1\n      jump\t// in\n    tag_143:\n      calldataload(0x24)\n      swap1\n      tag_144\n      tag_3\n      jump\t// in\n    tag_144:\n      swap3\n      calldataload(0x64)\n      swap5\n      calldataload(0x84)\n      0xffffffffffffffff\n      swap1\n      dup2\n      dup2\n      gt\n      tag_66\n      jumpi\n      tag_147\n      swap1\n      calldatasize\n      swap1\n      dup5\n      add\n      tag_4\n      jump\t// in\n    tag_147:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":5252:5260  deadline */\n      swap8\n      swap1\n      swap4\n      tag_148\n      dup3\n      tag_6\n      jump\t// in\n    tag_148:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap4\n      dup5\n      dup8\n      and\n      swap3\n      dup4\n      0x00\n      mstore\n      dup2\n      0x20\n      mstore\n      dup3\n      0x00\n      keccak256\n      sload\n      dup4\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9208:9270  abi.encode(LINK_TYPEHASH, owner_, fid, vault, nonce, deadline) */\n      swap7\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9208:9270  abi.encode(LINK_TYPEHASH, owner_, fid, vault, nonce, deadline) */\n      dup9\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      swap6\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":2696:2785  keccak256(\"Link(address owner,uint256 fid,address vault,uint256 nonce,uint256 deadline)\") */\n      0xa678f94f5bffc40cefaf81a99c9b64a42700e1fc99df73ce4ea5b0edb83c6fae\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup8\n      mstore\n      dup6\n      dup10\n      add\n      mstore\n      dup11\n      0x60\n      dup10\n      add\n      mstore\n      dup12\n      and\n      0x80\n      dup9\n      add\n      mstore\n      0xa0\n      dup8\n      add\n      mstore\n      0xc0\n      dup7\n      add\n      mstore\n      0xc0\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9208:9270  abi.encode(LINK_TYPEHASH, owner_, fid, vault, nonce, deadline) */\n      dup6\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0xe0\n      dup6\n      add\n      swap4\n      dup6\n      dup6\n      lt\n      swap1\n      dup6\n      gt\n      or\n      tag_149\n      jumpi\n      pop\n      dup3\n      swap1\n      mstore\n      dup3\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9198:9271  keccak256(abi.encode(LINK_TYPEHASH, owner_, fid, vault, nonce, deadline)) */\n      swap1\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9298:9356  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash) */\n      0x0100\n      dup5\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      swap1\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9327:9343  DOMAIN_SEPARATOR */\n      immutable(\"0x9cdad53cb90fcd2d286d1b56be653be0d7f81d30eae9df6bb3cb2e68d4647bd0\")\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x0102\n      dup6\n      add\n      mstore\n      0x0122\n      swap1\n      swap4\n      add\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9298:9356  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash) */\n      0x42\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":5384:5389  vault */\n      tag_78\n      swap7\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":5351:5354  sig */\n      tag_153\n      swap4\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":5384:5389  vault */\n      swap1\n      swap3\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":5351:5354  sig */\n      swap1\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9298:9356  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash) */\n      tag_151\n      0x62\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup3\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9298:9356  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash) */\n      tag_5\n      jump\t// in\n    tag_151:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9288:9357  keccak256(abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash)) */\n      swap1\n      keccak256\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":5351:5354  sig */\n      dup5\n      tag_8\n      jump\t// in\n    tag_153:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":5384:5389  vault */\n      tag_10\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n    tag_149:\n      0x41\n      swap1\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore\n      revert(0x00, 0x24)\n    tag_38:\n      dup3\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1970:2014  IFarcasterProofVerifier public proofVerifier */\n      0x05\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      sload\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_36:\n      pop\n      swap1\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_163\n      tag_1\n      jump\t// in\n    tag_163:\n      and\n      0x00\n      mstore\n      dup3\n      mstore\n      dup1\n      0x00\n      keccak256\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_30:\n      pop\n      swap1\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x80))\n      tag_177\n      tag_1\n      jump\t// in\n    tag_177:\n      calldataload(0x24)\n      swap1\n      tag_178\n      tag_3\n      jump\t// in\n    tag_178:\n      swap3\n      calldataload(0x64)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_66\n      jumpi\n      tag_181\n      swap1\n      calldatasize\n      swap1\n      dup8\n      add\n      tag_4\n      jump\t// in\n    tag_181:\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup8\n      dup2\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6624:6637  proofVerifier */\n      0x05\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      sload\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6651:6675  address(v) == address(0) */\n      swap2\n      dup3\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6647:6697  if (address(v) == address(0)) revert ZeroAddress() */\n      tag_182\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      swap1\n      0x84\n      0x20\n      swap5\n      swap4\n      swap3\n      dup7\n      dup9\n      mload\n      swap8\n      dup9\n      swap7\n      dup8\n      swap6\n      dup7\n      swap5\n      shl(0xe0, 0x469b9b71)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6712:6744  v.verifyLink(owner_, fid, proof) */\n      dup7\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup14\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6712:6744  v.verifyLink(owner_, fid, proof) */\n      swap1\n      dup6\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mstore\n      dup13\n      0x24\n      dup6\n      add\n      mstore\n      0x60\n      0x44\n      dup6\n      add\n      mstore\n      dup2\n      0x64\n      dup6\n      add\n      mstore\n      dup5\n      dup5\n      add\n      calldatacopy\n      0x00\n      dup3\n      dup3\n      add\n      dup5\n      add\n      mstore\n      0x1f\n      add\n      not(0x1f)\n      and\n      dup2\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6712:6744  v.verifyLink(owner_, fid, proof) */\n      sub\n      add\n      swap2\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_184\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6712:6744  v.verifyLink(owner_, fid, proof) */\n      swap2\n      tag_186\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n    tag_187:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6711:6744  !v.verifyLink(owner_, fid, proof) */\n      pop\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6707:6771  if (!v.verifyLink(owner_, fid, proof)) revert VerifierRejected() */\n      tag_188\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6800:6805  vault */\n      pop\n      tag_78\n      swap4\n      pop\n      tag_10\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6707:6771  if (!v.verifyLink(owner_, fid, proof)) revert VerifierRejected() */\n    tag_188:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mload\n      shl(0xe1, 0x6b7a15f5)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6753:6771  VerifierRejected() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup5\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6753:6771  VerifierRejected() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6712:6744  v.verifyLink(owner_, fid, proof) */\n    tag_186:\n      swap1\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6712:6744  v.verifyLink(owner_, fid, proof) */\n      dup2\n      returndatasize\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6712:6744  v.verifyLink(owner_, fid, proof) */\n      gt\n      tag_191\n      jumpi\n    tag_192:\n      dup2\n      tag_193\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6712:6744  v.verifyLink(owner_, fid, proof) */\n      swap4\n      dup4\n      tag_5\n      jump\t// in\n    tag_193:\n      dup2\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      sub\n      slt\n      tag_66\n      jumpi\n      mload\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_66\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6712:6744  v.verifyLink(owner_, fid, proof) */\n      0x00\n      jump(tag_187)\n    tag_191:\n      returndatasize\n      swap2\n      pop\n      jump(tag_192)\n    tag_184:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup3\n      mload\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6647:6697  if (address(v) == address(0)) revert ZeroAddress() */\n    tag_182:\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup5\n      mload\n      shl(0xe0, 0xd92e233d)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":6684:6697  ZeroAddress() */\n      dup2\n      mstore\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n    tag_28:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_202\n      tag_11\n      jump\t// in\n    tag_202:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x00\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup3\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      stop\n    tag_26:\n      pop\n      swap1\n      jumpi(tag_66, callvalue)\n      add(not(0x03), calldatasize)\n      slt\n      tag_66\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4454:4459  vault */\n      tag_78\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      swap1\n      tag_208\n      tag_2\n      jump\t// in\n    tag_208:\n      swap1\n      calldataload\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4437:4447  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":4454:4459  vault */\n      tag_10\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n    tag_24:\n      dup3\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      swap1\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":2927:3004  keccak256(\"Unlink(address owner,uint256 fid,uint256 nonce,uint256 deadline)\") */\n      0xc21fcd4c1487e99128bcf2100fe7ade08497b3a0531a3075cec218aa56ef2103\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup2\n      mstore\n      return\n    tag_22:\n      dup3\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      swap1\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":2503:2544  bytes32 public immutable DOMAIN_SEPARATOR */\n      immutable(\"0x9cdad53cb90fcd2d286d1b56be653be0d7f81d30eae9df6bb3cb2e68d4647bd0\")\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup2\n      mstore\n      return\n    tag_20:\n      pop\n      swap1\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x80))\n      tag_221\n      tag_1\n      jump\t// in\n    tag_221:\n      swap1\n      calldataload(0x24)\n      swap1\n      0xffffffffffffffff\n      calldataload(0x44)\n      calldataload(0x64)\n      dup3\n      dup2\n      gt\n      tag_66\n      jumpi\n      tag_224\n      swap1\n      calldatasize\n      swap1\n      dup9\n      add\n      tag_4\n      jump\t// in\n    tag_224:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":5565:5573  deadline */\n      swap1\n      tag_225\n      dup4\n      tag_6\n      jump\t// in\n    tag_225:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap3\n      dup4\n      dup9\n      and\n      swap5\n      dup6\n      0x00\n      mstore\n      dup10\n      0x20\n      mstore\n      dup7\n      0x00\n      keccak256\n      sload\n      dup8\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9564:9621  abi.encode(UNLINK_TYPEHASH, owner_, fid, nonce, deadline) */\n      swap3\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9564:9621  abi.encode(UNLINK_TYPEHASH, owner_, fid, nonce, deadline) */\n      dup5\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":2927:3004  keccak256(\"Unlink(address owner,uint256 fid,uint256 nonce,uint256 deadline)\") */\n      0xc21fcd4c1487e99128bcf2100fe7ade08497b3a0531a3075cec218aa56ef2103\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup4\n      mstore\n      dup9\n      dup11\n      dup7\n      add\n      mstore\n      dup11\n      0x60\n      dup7\n      add\n      mstore\n      0x80\n      dup6\n      add\n      mstore\n      0xa0\n      dup5\n      add\n      mstore\n      0xa0\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9564:9621  abi.encode(UNLINK_TYPEHASH, owner_, fid, nonce, deadline) */\n      dup4\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0xc0\n      dup4\n      add\n      swap2\n      dup4\n      dup4\n      lt\n      swap1\n      dup4\n      gt\n      or\n      tag_226\n      jumpi\n      dup2\n      dup9\n      mstore\n      dup3\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9554:9622  keccak256(abi.encode(UNLINK_TYPEHASH, owner_, fid, nonce, deadline)) */\n      swap1\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0xe0\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9649:9707  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash) */\n      dup5\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      swap1\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9678:9694  DOMAIN_SEPARATOR */\n      immutable(\"0x9cdad53cb90fcd2d286d1b56be653be0d7f81d30eae9df6bb3cb2e68d4647bd0\")\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0xe2\n      dup6\n      add\n      mstore\n      0x0102\n      swap1\n      swap4\n      add\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9649:9707  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash) */\n      0x42\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":5659:5662  sig */\n      tag_229\n      swap4\n      swap3\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9649:9707  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash) */\n      swap1\n      tag_93\n      0x62\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup3\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":9649:9707  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash) */\n      tag_5\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":5659:5662  sig */\n    tag_229:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup4\n      0x00\n      mstore\n      mstore(0x20, 0x01)\n      dup3\n      0x00\n      keccak256\n      sload\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":5678:5703  fidToOwner[fid] != owner_ */\n      sub\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":5674:5725  if (fidToOwner[fid] != owner_) revert NotFidOwner() */\n      tag_231\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":5748:5754  owner_ */\n      tag_78\n      dup4\n      dup4\n      tag_9\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":5674:5725  if (fidToOwner[fid] != owner_) revert NotFidOwner() */\n    tag_231:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mload\n      shl(0xe2, 0x2ef5f69d)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":5712:5725  NotFidOwner() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup4\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":5712:5725  NotFidOwner() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n    tag_226:\n      0x41\n      dup12\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore\n      revert(0x00, 0x24)\n    tag_18:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x00))\n      dup1\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":3184:3297  keccak256(\"Transfer(address owner,uint256 fid,address newOwner,address newVault,uint256 nonce,uint256 deadline)\") */\n      0x7a00a9d047b8532e87561a4cfa9e3cf48a980f4df0d4fa2e76169a8d4d102dd5\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x20\n      swap3\n      mstore\n      return\n    tag_1:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_66\n      jumpi\n      jump\t// out\n    tag_2:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_66\n      jumpi\n      jump\t// out\n    tag_3:\n      calldataload(0x44)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_66\n      jumpi\n      jump\t// out\n    tag_4:\n      swap2\n      dup2\n      0x1f\n      dup5\n      add\n      slt\n      iszero\n      tag_66\n      jumpi\n      dup3\n      calldataload\n      swap2\n      0xffffffffffffffff\n      dup4\n      gt\n      tag_66\n      jumpi\n      0x20\n      dup4\n      dup2\n      dup7\n      add\n      swap6\n      add\n      add\n      gt\n      tag_66\n      jumpi\n      jump\t// out\n    tag_5:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_250\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_250:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":11119:11249  function _checkDeadline(uint256 deadline) internal view {... */\n    tag_6:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":11189:11204  block.timestamp */\n      timestamp\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":11189:11215  block.timestamp > deadline */\n      gt\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":11185:11242  if (block.timestamp > deadline) revert SignatureExpired() */\n      tag_252\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":11119:11249  function _checkDeadline(uint256 deadline) internal view {... */\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":11185:11242  if (block.timestamp > deadline) revert SignatureExpired() */\n    tag_252:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0x0819bdcd)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":11224:11242  SignatureExpired() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10160:10597  function _verifyAndBump(address expectedSigner, bytes32 digest, bytes calldata sig) internal {... */\n    tag_8:\n      swap3\n      swap1\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10286:10307  _recover(digest, sig) */\n      tag_254\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10160:10597  function _verifyAndBump(address expectedSigner, bytes32 digest, bytes calldata sig) internal {... */\n      swap3\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10286:10307  _recover(digest, sig) */\n      tag_13\n      jump\t// in\n    tag_254:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      swap2\n      swap1\n      dup3\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10321:10344  recovered == address(0) */\n      dup1\n      iszero\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10321:10375  recovered == address(0) || recovered != expectedSigner */\n      dup2\n      iszero\n      tag_255\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10160:10597  function _verifyAndBump(address expectedSigner, bytes32 digest, bytes calldata sig) internal {... */\n    tag_256:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10317:10399  if (recovered == address(0) || recovered != expectedSigner) revert InvalidSigner() */\n      pop\n      tag_257\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10342:10343  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10422:10428  nonces */\n      0x04\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x20\n      mstore\n      0x40\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10342:10343  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      keccak256\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10579:10580  1 */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup2\n      sload\n      add\n      swap1\n      sstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10160:10597  function _verifyAndBump(address expectedSigner, bytes32 digest, bytes calldata sig) internal {... */\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10317:10399  if (recovered == address(0) || recovered != expectedSigner) revert InvalidSigner() */\n    tag_257:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mload(0x40)\n      shl(0xe2, 0x20578759)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10384:10399  InvalidSigner() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10321:10375  recovered == address(0) || recovered != expectedSigner */\n    tag_255:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      swap1\n      pop\n      dup3\n      dup3\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10348:10375  recovered != expectedSigner */\n      eq\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10321:10375  recovered == address(0) || recovered != expectedSigner */\n      0x00\n      jump(tag_256)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7936:8133  function _unlink(uint256 fid, address owner_) internal {... */\n    tag_9:\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup2\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8001:8023  delete fidToOwner[fid] */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8008:8018  fidToOwner */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x20\n      mstore\n      0x40\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8001:8023  delete fidToOwner[fid] */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      keccak256\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      swap1\n      dup2\n      dup2\n      sload\n      and\n      swap1\n      sstore\n      mstore(0x20, 0x03)\n      0x40\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8001:8023  delete fidToOwner[fid] */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      keccak256\n      swap1\n      dup2\n      sload\n      and\n      swap1\n      sstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      swap1\n      dup2\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8001:8023  delete fidToOwner[fid] */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8072:8082  ownerToFid */\n      0x02\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x20\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8001:8023  delete fidToOwner[fid] */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x40\n      dup2\n      keccak256\n      sstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8105:8126  Unlinked(fid, owner_) */\n      0x40fc318d01f3d2a4260ec6762d8dc27c93240d50d16517be56ffffa806f4940e\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8001:8023  delete fidToOwner[fid] */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8105:8126  Unlinked(fid, owner_) */\n      dup1\n      log3\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7936:8133  function _unlink(uint256 fid, address owner_) internal {... */\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7333:7930  function _link(address owner_, uint256 fid, address vault) internal {... */\n    tag_10:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      swap1\n      dup2\n      and\n      swap3\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7333:7930  function _link(address owner_, uint256 fid, address vault) internal {... */\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7415:7435  owner_ == address(0) */\n      dup4\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7411:7457  if (owner_ == address(0)) revert ZeroAddress() */\n      tag_259\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7471:7479  fid == 0 */\n      dup3\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7467:7502  if (fid == 0) revert FidNotLinked() */\n      tag_261\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup3\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7433:7434  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mstore\n      0x20\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7534:7544  fidToOwner */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup4\n      mstore\n      0x40\n      swap1\n      dup3\n      dup3\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7433:7434  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      keccak256\n      sload\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7530:7590  if (fidToOwner[fid] != address(0)) revert FidAlreadyLinked() */\n      tag_263\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup6\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7433:7434  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7604:7614  ownerToFid */\n      0x02\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup5\n      mstore\n      dup2\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7433:7434  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      keccak256\n      sload\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7600:7656  if (ownerToFid[owner_] != 0) revert OwnerAlreadyLinked() */\n      tag_265\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup5\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7433:7434  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7534:7544  fidToOwner */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup5\n      mstore\n      dup3\n      dup3\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7433:7434  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      keccak256\n      swap2\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      swap3\n      dup9\n      dup5\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      dup8\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7433:7434  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7604:7614  ownerToFid */\n      0x02\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup7\n      mstore\n      dup7\n      dup5\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7433:7434  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      keccak256\n      sstore\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7740:7759  vault != address(0) */\n      swap3\n      dup4\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7736:7882  if (vault != address(0)) {... */\n      tag_267\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7333:7930  function _link(address owner_, uint256 fid, address vault) internal {... */\n    tag_268:\n      pop\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7897:7923  Linked(fid, owner_, vault) */\n      0x3dd7415ea1c3934b25f4a05ee43968c346015575490b276d1e966d862c64816c\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7897:7923  Linked(fid, owner_, vault) */\n      log3\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7333:7930  function _link(address owner_, uint256 fid, address vault) internal {... */\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7736:7882  if (vault != address(0)) {... */\n    tag_267:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup6\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7433:7434  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7779:7789  fidToVault */\n      0x03\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup6\n      mstore\n      dup3\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7433:7434  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      keccak256\n      sload\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7775:7834  if (fidToVault[fid] != address(0)) revert VaultAlreadySet() */\n      tag_269\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7433:7434  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup6\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7779:7789  fidToVault */\n      0x03\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup6\n      mstore\n      dup3\n      dup2\n      keccak256\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      dup5\n      or\n      swap1\n      swap2\n      sstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7897:7923  Linked(fid, owner_, vault) */\n      0x3dd7415ea1c3934b25f4a05ee43968c346015575490b276d1e966d862c64816c\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7736:7882  if (vault != address(0)) {... */\n      jump(tag_268)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7775:7834  if (fidToVault[fid] != address(0)) revert VaultAlreadySet() */\n    tag_269:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup2\n      mload\n      shl(0xe0, 0x1bb0ddfb)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7817:7834  VaultAlreadySet() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7600:7656  if (ownerToFid[owner_] != 0) revert OwnerAlreadyLinked() */\n    tag_265:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup2\n      mload\n      shl(0xe2, 0x34b3fb37)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7636:7656  OwnerAlreadyLinked() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7530:7590  if (fidToOwner[fid] != address(0)) revert FidAlreadyLinked() */\n    tag_263:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup2\n      mload\n      shl(0xe3, 0x1f2c68c1)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7572:7590  FidAlreadyLinked() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7467:7502  if (fid == 0) revert FidNotLinked() */\n    tag_261:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mload(0x40)\n      shl(0xe1, 0x7a93adf7)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7488:7502  FidNotLinked() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7411:7457  if (owner_ == address(0)) revert ZeroAddress() */\n    tag_259:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0xd92e233d)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":7444:7457  ZeroAddress() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_271:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8139:8897  function _transfer(uint256 fid, address oldOwner, address newOwner, address newVault) internal {... */\n    tag_12:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      swap3\n      dup4\n      and\n      swap4\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8139:8897  function _transfer(uint256 fid, address oldOwner, address newOwner, address newVault) internal {... */\n      swap1\n      swap2\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8248:8270  newOwner == address(0) */\n      dup5\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8244:8292  if (newOwner == address(0)) revert ZeroAddress() */\n      tag_259\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup5\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8268:8269  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mstore\n      0x20\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8306:8316  ownerToFid */\n      0x02\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup4\n      mstore\n      0x40\n      swap1\n      dup2\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8268:8269  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      keccak256\n      sload\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8302:8360  if (ownerToFid[newOwner] != 0) revert OwnerAlreadyLinked() */\n      tag_265\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      swap1\n      dup6\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8844:8890  Transferred(fid, oldOwner, newOwner, newVault) */\n      0xfb1b10075cb2fabc098c864da78ada292c7b57ddf48e1192434b237194971526\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      swap5\n      swap4\n      swap3\n      and\n      swap6\n      dup7\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8268:8269  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8306:8316  ownerToFid */\n      0x02\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup5\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8268:8269  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup3\n      dup2\n      keccak256\n      sstore\n      dup6\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8268:8269  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8465:8475  fidToOwner */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup5\n      mstore\n      dup2\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8268:8269  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      keccak256\n      swap3\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      swap4\n      dup10\n      dup6\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      dup9\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8268:8269  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8306:8316  ownerToFid */\n      0x02\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup6\n      mstore\n      dup7\n      dup4\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8268:8269  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      keccak256\n      sstore\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8633:8655  newVault != address(0) */\n      swap2\n      dup3\n      iszero\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8629:8829  if (newVault != address(0)) {... */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      eq\n      tag_277\n      jumpi\n      dup6\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8268:8269  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mstore\n      0x03\n      dup5\n      mstore\n      dup3\n      dup3\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8268:8269  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      keccak256\n      swap2\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8629:8829  if (newVault != address(0)) {... */\n    tag_279:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8844:8890  Transferred(fid, oldOwner, newOwner, newVault) */\n      log4\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8139:8897  function _transfer(uint256 fid, address oldOwner, address newOwner, address newVault) internal {... */\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8629:8829  if (newVault != address(0)) {... */\n    tag_277:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup6\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8268:8269  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mstore\n      0x03\n      dup5\n      mstore\n      dup2\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8268:8269  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      keccak256\n      swap1\n      dup2\n      sload\n      and\n      swap1\n      sstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":8629:8829  if (newVault != address(0)) {... */\n      jump(tag_279)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10603:11113  function _recover(bytes32 digest, bytes calldata sig) internal pure returns (address, bytes32) {... */\n    tag_13:\n      swap3\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10726:10728  65 */\n      0x41\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10712:10728  sig.length != 65 */\n      sub\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10708:10761  if (sig.length != 65) return (address(0), bytes32(0)) */\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7051:7076  tryRecover(hash, v, r, s) */\n      tag_282\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10882:11055  assembly {... */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7105:7113  errorArg */\n      tag_283\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10882:11055  assembly {... */\n      swap3\n      calldataload\n      dup1\n      swap6\n      0x40\n      0x20\n      dup5\n      add\n      calldataload\n      swap4\n      add\n      calldataload\n      0x00\n      byte\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7051:7076  tryRecover(hash, v, r, s) */\n      swap1\n      tag_14\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7105:7113  errorArg */\n      swap1\n      swap3\n      swap2\n      swap3\n      tag_15\n      jump\t// in\n    tag_283:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":11064:11106  return (ECDSA.recover(digest, v, r, s), r) */\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10603:11113  function _recover(bytes32 digest, bytes calldata sig) internal pure returns (address, bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10708:10761  if (sig.length != 65) return (address(0), bytes32(0)) */\n    tag_280:\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10746:10747  0 */\n      0x00\n      swap2\n      pop\n      dup2\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":10730:10761  return (address(0), bytes32(0)) */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5203:6754  function tryRecover(... */\n    tag_14:\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6283:6349  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6270:6349  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      dup5\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6266:6430  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      tag_284\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      swap2\n      0x20\n      swap4\n      0x80\n      swap3\n      0xff\n      0x00\n      swap6\n      mload(0x40)\n      swap5\n      dup6\n      mstore\n      and\n      dup7\n      dup5\n      add\n      mstore\n      0x40\n      dup4\n      add\n      mstore\n      0x60\n      dup3\n      add\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6541:6565  ecrecover(hash, v, r, s) */\n      dup3\n      dup1\n      mstore\n      0x01\n      gas\n      staticcall\n      iszero\n      tag_286\n      jumpi\n      mload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6579:6599  signer == address(0) */\n      iszero\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6575:6688  if (signer == address(0)) {... */\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6698:6747  return (signer, RecoverError.NoError, bytes32(0)) */\n      swap1\n      0x00\n      swap1\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5203:6754  function tryRecover(... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6575:6688  if (signer == address(0)) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6615:6677  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      pop\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6541:6565  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6615:6677  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      swap1\n      0x00\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6541:6565  ecrecover(hash, v, r, s) */\n    tag_286:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6266:6430  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6365:6419  return (address(0), RecoverError.InvalidSignatureS, s) */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6381:6382  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6365:6419  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6385:6415  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6365:6419  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap2\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7280:7812  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_15:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x04\n      dup2\n      lt\n      iszero\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7366:7395  error == RecoverError.NoError */\n      dup1\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7411:7418  return; */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7362:7806  if (error == RecoverError.NoError) {... */\n    tag_292:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7462:7500  error == RecoverError.InvalidSignature */\n      dup2\n      sub\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      tag_294\n      jumpi\n      mload(0x40)\n      shl(0xe0, 0xf645eedf)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7523:7546  ECDSAInvalidSignature() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x04\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7523:7546  ECDSAInvalidSignature() */\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7458:7806  if (error == RecoverError.InvalidSignature) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7576:7611  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7567:7611  error == RecoverError.InvalidSignatureLength */\n      dup2\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7576:7611  RecoverError.InvalidSignatureLength */\n      tag_296\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0xfce698f7)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7634:7680  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x04\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7634:7680  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      dup2\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      dup4\n      swap1\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7634:7680  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7563:7806  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7710:7740  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7701:7740  error == RecoverError.InvalidSignatureS */\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7697:7806  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7563:7806  if (error == RecoverError.InvalidSignatureLength) {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7280:7812  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7697:7806  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_298:\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x24\n      swap1\n      mload(0x40)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7763:7795  ECDSAInvalidSignatureS(errorArg) */\n      swap1\n      shl(0xe2, 0x35e2f383)\n      dup3\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      0x04\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7763:7795  ECDSAInvalidSignatureS(errorArg) */\n      dup3\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7763:7795  ECDSAInvalidSignatureS(errorArg) */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n    tag_290:\n      shl(0xe0, 0x4e487b71)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7375:7395  RecoverError.NoError */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      mstore\n      mstore(0x04, 0x21)\n      0x24\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7375:7395  RecoverError.NoError */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":1370:11251  contract FarcasterRegistry is Ownable {... */\n      revert\n\n    auxdata: 0xa264697066735822122098e3cef18d799b5548b0b5e1b4e1fa051a1a0f421b4eb79e8633bca2c4f342a764736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"finalize_allocation": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE CALLVALUE PUSH2 0x153 JUMPI CALLER ISZERO PUSH2 0x13E JUMPI POP PUSH0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x11 PUSH1 0x20 DUP3 MLOAD PUSH2 0x66 DUP2 PUSH2 0x157 JUMP JUMPDEST DUP3 DUP2 MSTORE ADD PUSH17 0x4661726361737465725265676973747279 PUSH1 0x78 SHL DUP2 MSTORE KECCAK256 PUSH1 0x1 PUSH1 0x20 DUP4 MLOAD PUSH2 0x91 DUP2 PUSH2 0x157 JUMP JUMPDEST DUP3 DUP2 MSTORE ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE KECCAK256 DUP3 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP5 MSTORE DUP5 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD SWAP3 DUP2 DUP5 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP6 GT OR PUSH2 0x12A JUMPI DUP4 SWAP1 MSTORE MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE PUSH2 0xFB8 SWAP1 DUP2 PUSH2 0x173 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x2EE ADD MSTORE DUP2 DUP2 PUSH2 0x619 ADD MSTORE DUP2 DUP2 PUSH2 0x8D8 ADD MSTORE PUSH2 0x9C9 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x12A JUMPI PUSH1 0x40 MSTORE JUMP INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0xBF26F4 EQ PUSH2 0xA48 JUMPI POP DUP1 PUSH4 0x1D59E7E8 EQ PUSH2 0x8FB JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x8C1 JUMPI DUP1 PUSH4 0x48BB996C EQ PUSH2 0x887 JUMPI DUP1 PUSH4 0x65AF7909 EQ PUSH2 0x862 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x80B JUMPI DUP1 PUSH4 0x74E48CBA EQ PUSH2 0x6DF JUMPI DUP1 PUSH4 0x76B3C1BE EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x7B9CF4F3 EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x6A9 JUMPI DUP1 PUSH4 0x7FA417B3 EQ PUSH2 0x681 JUMPI DUP1 PUSH4 0x8989A842 EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0x8A62BB16 EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0xBF74AE26 EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0xC8B6A983 EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0xCCB570E3 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xDDBC4A4B EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0xDF6244DB EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0xE2CC3D2F EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xE477C7F7 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0xF1E023FD EQ PUSH2 0x1A6 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x11C JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x135 PUSH2 0xA80 JUMP JUMPDEST SWAP1 PUSH2 0x13E PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x18C JUMPI POP POP PUSH0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 STOP JUMPDEST SWAP1 PUSH0 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI DUP2 CALLDATALOAD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1E6 JUMPI PUSH2 0x1E4 CALLER DUP4 PUSH2 0xB9C JUMP JUMPDEST STOP JUMPDEST MLOAD PUSH4 0x2EF5F69D PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 POP REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x210 PUSH2 0xA80 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x21C PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP4 SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP1 DUP2 DUP8 SUB PUSH2 0x1A2 JUMPI PUSH1 0x84 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xA4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0x25A SWAP1 CALLDATASIZE SWAP1 DUP13 ADD PUSH2 0xAC2 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0x266 DUP7 PUSH2 0xB26 JUMP JUMPDEST DUP10 DUP6 DUP11 AND SWAP7 DUP8 PUSH0 MSTORE DUP14 PUSH1 0x20 MSTORE DUP9 PUSH0 KECCAK256 SLOAD DUP10 MLOAD SWAP5 DUP9 PUSH1 0x20 DUP8 ADD SWAP5 PUSH32 0x7A00A9D047B8532E87561A4CFA9E3CF48A980F4DF0D4FA2E76169A8D4D102DD5 DUP7 MSTORE DUP12 DUP14 DUP10 ADD MSTORE DUP14 PUSH1 0x60 DUP10 ADD MSTORE AND PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 MSTORE PUSH2 0x100 DUP4 ADD SWAP2 DUP4 DUP4 LT SWAP1 DUP4 GT OR PUSH2 0x365 JUMPI DUP2 DUP9 MSTORE DUP3 MLOAD SWAP1 KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x120 DUP5 ADD SWAP1 DUP2 MSTORE PUSH32 0x0 PUSH2 0x122 DUP6 ADD MSTORE PUSH2 0x142 SWAP1 SWAP4 ADD MSTORE PUSH1 0x42 DUP2 MSTORE PUSH2 0x339 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x330 PUSH1 0x62 DUP3 PUSH2 0xAF0 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP9 PUSH2 0xB40 JUMP JUMPDEST DUP4 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 PUSH0 KECCAK256 SLOAD AND SUB PUSH2 0x356 JUMPI POP PUSH2 0x1E4 SWAP5 POP PUSH2 0xD74 JUMP JUMPDEST MLOAD PUSH4 0x2EF5F69D PUSH1 0xE2 SHL DUP2 MSTORE DUP6 SWAP1 REVERT JUMPDEST PUSH1 0x41 DUP14 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x39D PUSH2 0xA80 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x2 DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x3C8 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0x3D0 PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH32 0x9BA82601182E51F8DD35A545A13E9D8716495EE8D41C4F1B65FC97F97D661927 PUSH0 DUP1 LOG2 STOP JUMPDEST DUP3 CALLVALUE PUSH2 0x1A2 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0xA678F94F5BFFC40CEFAF81A99C9B64A42700E1FC99DF73CE4EA5B0EDB83C6FAE DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI DUP2 CALLDATALOAD PUSH2 0x46C PUSH2 0xA96 JUMP JUMPDEST SWAP1 PUSH2 0x475 PUSH2 0xAAC JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP5 SWAP1 KECCAK256 SLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x4A1 JUMPI POP PUSH2 0x1E4 SWAP4 POP CALLER SWAP1 PUSH2 0xD74 JUMP JUMPDEST MLOAD PUSH4 0x2EF5F69D PUSH1 0xE2 SHL DUP2 MSTORE DUP5 SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x20 SWAP2 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 PUSH0 KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x20 SWAP2 CALLDATALOAD PUSH0 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 PUSH0 KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1A2 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH0 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x552 PUSH2 0xA80 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x55E PUSH2 0xAAC JUMP JUMPDEST SWAP3 PUSH1 0x64 CALLDATALOAD SWAP5 PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0x584 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0xAC2 JUMP JUMPDEST SWAP8 SWAP1 SWAP4 PUSH2 0x590 DUP3 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP8 AND SWAP3 DUP4 PUSH0 MSTORE DUP2 PUSH1 0x20 MSTORE DUP3 PUSH0 KECCAK256 SLOAD DUP4 MLOAD SWAP7 PUSH1 0x20 DUP9 ADD SWAP6 PUSH32 0xA678F94F5BFFC40CEFAF81A99C9B64A42700E1FC99DF73CE4EA5B0EDB83C6FAE DUP8 MSTORE DUP6 DUP10 ADD MSTORE DUP11 PUSH1 0x60 DUP10 ADD MSTORE DUP12 AND PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 MSTORE PUSH1 0xE0 DUP6 ADD SWAP4 DUP6 DUP6 LT SWAP1 DUP6 GT OR PUSH2 0x66E JUMPI POP DUP3 SWAP1 MSTORE DUP3 MLOAD SWAP1 KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP5 ADD SWAP1 DUP2 MSTORE PUSH32 0x0 PUSH2 0x102 DUP6 ADD MSTORE PUSH2 0x122 SWAP1 SWAP4 ADD MSTORE PUSH1 0x42 DUP2 MSTORE PUSH2 0x1E4 SWAP7 PUSH2 0x669 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH2 0x660 PUSH1 0x62 DUP3 PUSH2 0xAF0 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 PUSH2 0xB40 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x41 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x1A2 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x6CF PUSH2 0xA80 JUMP JUMPDEST AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x6FA PUSH2 0xA80 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x706 PUSH2 0xAAC JUMP JUMPDEST SWAP3 PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0x726 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0xAC2 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 DUP2 PUSH1 0x5 SLOAD AND SWAP2 DUP3 ISZERO PUSH2 0x7FC JUMPI SWAP1 PUSH1 0x84 PUSH1 0x20 SWAP5 SWAP4 SWAP3 DUP7 DUP9 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x469B9B71 PUSH1 0xE0 SHL DUP7 MSTORE DUP14 AND SWAP1 DUP6 ADD MSTORE DUP13 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP6 ADD MSTORE DUP2 PUSH1 0x64 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x7F2 JUMPI PUSH0 SWAP2 PUSH2 0x7B7 JUMPI JUMPDEST POP ISZERO PUSH2 0x7A8 JUMPI POP PUSH2 0x1E4 SWAP4 POP PUSH2 0xC07 JUMP JUMPDEST MLOAD PUSH4 0x6B7A15F5 PUSH1 0xE1 SHL DUP2 MSTORE DUP5 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x7EA JUMPI JUMPDEST DUP2 PUSH2 0x7D2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xAF0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1A2 JUMPI PUSH0 PUSH2 0x797 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x7C5 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP5 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x823 PUSH2 0xD49 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A2 JUMPI CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x1E4 SWAP1 PUSH2 0x87F PUSH2 0xA96 JUMP JUMPDEST SWAP1 CALLDATALOAD CALLER PUSH2 0xC07 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x1A2 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0xC21FCD4C1487E99128BCF2100FE7ADE08497B3A0531A3075CEC218AA56EF2103 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1A2 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x916 PUSH2 0xA80 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0x93E SWAP1 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0xAC2 JUMP JUMPDEST SWAP1 PUSH2 0x948 DUP4 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP9 AND SWAP5 DUP6 PUSH0 MSTORE DUP10 PUSH1 0x20 MSTORE DUP7 PUSH0 KECCAK256 SLOAD DUP8 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP2 PUSH32 0xC21FCD4C1487E99128BCF2100FE7ADE08497B3A0531A3075CEC218AA56EF2103 DUP4 MSTORE DUP9 DUP11 DUP7 ADD MSTORE DUP11 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 MSTORE PUSH1 0xC0 DUP4 ADD SWAP2 DUP4 DUP4 LT SWAP1 DUP4 GT OR PUSH2 0xA35 JUMPI DUP2 DUP9 MSTORE DUP3 MLOAD SWAP1 KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0xE0 DUP5 ADD SWAP1 DUP2 MSTORE PUSH32 0x0 PUSH1 0xE2 DUP6 ADD MSTORE PUSH2 0x102 SWAP1 SWAP4 ADD MSTORE PUSH1 0x42 DUP2 MSTORE PUSH2 0xA0A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x330 PUSH1 0x62 DUP3 PUSH2 0xAF0 JUMP JUMPDEST DUP4 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 PUSH0 KECCAK256 SLOAD AND SUB PUSH2 0xA26 JUMPI PUSH2 0x1E4 DUP4 DUP4 PUSH2 0xB9C JUMP JUMPDEST MLOAD PUSH4 0x2EF5F69D PUSH1 0xE2 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST PUSH1 0x41 DUP12 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI DUP1 PUSH32 0x7A00A9D047B8532E87561A4CFA9E3CF48A980F4DF0D4FA2E76169A8D4D102DD5 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x1A2 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x1A2 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x1A2 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB12 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST TIMESTAMP GT PUSH2 0xB2E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x819BDCD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0xB4C SWAP3 PUSH2 0xE37 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND DUP1 ISZERO SWAP1 DUP2 ISZERO PUSH2 0xB8F JUMPI JUMPDEST POP PUSH2 0xB7D JUMPI AND PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP2 SLOAD ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x20578759 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP DUP3 DUP3 AND EQ ISZERO PUSH0 PUSH2 0xB63 JUMP JUMPDEST SWAP1 DUP2 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP1 DUP2 DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH32 0x40FC318D01F3D2A4260EC6762D8DC27C93240D50D16517BE56FFFFA806F4940E PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP1 DUP4 ISZERO PUSH2 0xD37 JUMPI DUP3 ISZERO PUSH2 0xD25 JUMPI DUP3 PUSH0 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x40 SWAP1 DUP3 DUP3 PUSH0 KECCAK256 SLOAD AND PUSH2 0xD14 JUMPI DUP6 PUSH0 MSTORE PUSH1 0x2 DUP5 MSTORE DUP2 PUSH0 KECCAK256 SLOAD PUSH2 0xD03 JUMPI DUP5 PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 DUP3 PUSH0 KECCAK256 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP3 DUP9 DUP5 DUP3 SLOAD AND OR SWAP1 SSTORE DUP8 PUSH0 MSTORE PUSH1 0x2 DUP7 MSTORE DUP7 DUP5 PUSH0 KECCAK256 SSTORE AND SWAP3 DUP4 PUSH2 0xCA6 JUMPI JUMPDEST POP POP MLOAD SWAP1 DUP2 MSTORE PUSH32 0x3DD7415EA1C3934B25F4A05EE43968C346015575490B276D1E966D862C64816C SWAP2 SWAP1 LOG3 JUMP JUMPDEST DUP6 PUSH0 MSTORE PUSH1 0x3 DUP6 MSTORE DUP3 PUSH0 KECCAK256 SLOAD AND PUSH2 0xCF2 JUMPI PUSH0 DUP6 DUP2 MSTORE PUSH1 0x3 DUP6 MSTORE DUP3 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE PUSH32 0x3DD7415EA1C3934B25F4A05EE43968C346015575490B276D1E966D862C64816C SWAP1 PUSH2 0xC7A JUMP JUMPDEST DUP2 MLOAD PUSH4 0x1BB0DDFB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH4 0x34B3FB37 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH4 0x1F2C68C1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7A93ADF7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xD5C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 SWAP1 SWAP2 SWAP1 DUP5 ISZERO PUSH2 0xD37 JUMPI DUP5 PUSH0 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x2 DUP4 MSTORE PUSH1 0x40 SWAP1 DUP2 PUSH0 KECCAK256 SLOAD PUSH2 0xD03 JUMPI SWAP1 DUP6 PUSH32 0xFB1B10075CB2FABC098C864DA78ADA292C7B57DDF48E1192434B237194971526 SWAP5 SWAP4 SWAP3 AND SWAP6 DUP7 PUSH0 MSTORE PUSH1 0x2 DUP5 MSTORE PUSH0 DUP3 DUP2 KECCAK256 SSTORE DUP6 PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP2 PUSH0 KECCAK256 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP4 DUP10 DUP6 DUP3 SLOAD AND OR SWAP1 SSTORE DUP9 PUSH0 MSTORE PUSH1 0x2 DUP6 MSTORE DUP7 DUP4 PUSH0 KECCAK256 SSTORE AND SWAP2 DUP3 ISZERO ISZERO PUSH0 EQ PUSH2 0xE22 JUMPI DUP6 PUSH0 MSTORE PUSH1 0x3 DUP5 MSTORE DUP3 DUP3 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE JUMPDEST MLOAD SWAP1 DUP2 MSTORE LOG4 JUMP JUMPDEST DUP6 PUSH0 MSTORE PUSH1 0x3 DUP5 MSTORE DUP2 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD AND SWAP1 SSTORE PUSH2 0xE1B JUMP JUMPDEST SWAP3 SWAP2 PUSH1 0x41 SUB PUSH2 0xE6A JUMPI PUSH2 0xE5D DUP2 PUSH2 0xE66 SWAP3 CALLDATALOAD DUP1 SWAP6 PUSH1 0x40 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP4 ADD CALLDATALOAD PUSH0 BYTE SWAP1 PUSH2 0xE72 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xEFF JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP2 POP DUP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0xEF4 JUMPI SWAP2 PUSH1 0x20 SWAP4 PUSH1 0x80 SWAP3 PUSH1 0xFF PUSH0 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0xEE9 JUMPI PUSH0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xEDF JUMPI SWAP1 PUSH0 SWAP1 PUSH0 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 PUSH1 0x1 SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xF6E JUMPI DUP1 PUSH2 0xF11 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0xF2B JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0xF4C JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0xF56 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xE3 0xCE CALL DUP14 PUSH26 0x9B5548B0B5E1B4E1FA051A1A0F421B4EB79E8633BCA2C4F342A7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "1370:9881:3:-:0;;;;;;;;;3326:10;1273:26:0;1269:95;;-1:-1:-1;1297:1:0;1370:9881:3;;3326:10;-1:-1:-1;;;;;;1370:9881:3;;;;;;3326:10;-1:-1:-1;;;;;1370:9881:3;;;;3052:40:0;;1297:1;3052:40;1370:9881:3;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;1370:9881:3;;3695:37;1370:9881;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;1370:9881:3;;3750:21;1370:9881;;3477:364;1370:9881;3477:364;;1370:9881;3582:95;1370:9881;;;;;;;;;;3373:53;1370:9881;;;;3822:4;1370:9881;;;;;3477:364;;1370:9881;;;;;;;;;;;;;;;;;;;;;3454:397;;1370:9881;3435:416;1370:9881;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1297:1:0;1370:9881:3;;;;;1297:1:0;1370:9881:3;1269:95:0;-1:-1:-1;;;1322:31:0;;1297:1;1322:31;;;1370:9881:3;;;1322:31:0;1370:9881:3;;;;;;;;;;;-1:-1:-1;;;;;1370:9881:3;;;;;;;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 2732,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_8457": {
									"entryPoint": 2688,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_8458": {
									"entryPoint": 2710,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_bytes_calldata": {
									"entryPoint": 2754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_packed_stringliteral_301a_bytes32_bytes32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_checkDeadline": {
									"entryPoint": 2854,
									"id": 1399,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkOwner": {
									"entryPoint": 3401,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_link": {
									"entryPoint": 3079,
									"id": 1072,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_recover": {
									"entryPoint": 3639,
									"id": 1385,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"fun_throwError": {
									"entryPoint": 3839,
									"id": 524,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_transfer": {
									"entryPoint": 3444,
									"id": 1175,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"fun_tryRecover": {
									"entryPoint": 3698,
									"id": 439,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"fun_unlink": {
									"entryPoint": 2972,
									"id": 1100,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_verifyAndBump": {
									"entryPoint": 2880,
									"id": 1338,
									"parameterSlots": 4,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"622": [
									{
										"length": 32,
										"start": 750
									},
									{
										"length": 32,
										"start": 1561
									},
									{
										"length": 32,
										"start": 2264
									},
									{
										"length": 32,
										"start": 2505
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0xBF26F4 EQ PUSH2 0xA48 JUMPI POP DUP1 PUSH4 0x1D59E7E8 EQ PUSH2 0x8FB JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x8C1 JUMPI DUP1 PUSH4 0x48BB996C EQ PUSH2 0x887 JUMPI DUP1 PUSH4 0x65AF7909 EQ PUSH2 0x862 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x80B JUMPI DUP1 PUSH4 0x74E48CBA EQ PUSH2 0x6DF JUMPI DUP1 PUSH4 0x76B3C1BE EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x7B9CF4F3 EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x6A9 JUMPI DUP1 PUSH4 0x7FA417B3 EQ PUSH2 0x681 JUMPI DUP1 PUSH4 0x8989A842 EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0x8A62BB16 EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0xBF74AE26 EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0xC8B6A983 EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0xCCB570E3 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xDDBC4A4B EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0xDF6244DB EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0xE2CC3D2F EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xE477C7F7 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0xF1E023FD EQ PUSH2 0x1A6 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x11C JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x135 PUSH2 0xA80 JUMP JUMPDEST SWAP1 PUSH2 0x13E PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x18C JUMPI POP POP PUSH0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 STOP JUMPDEST SWAP1 PUSH0 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI DUP2 CALLDATALOAD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1E6 JUMPI PUSH2 0x1E4 CALLER DUP4 PUSH2 0xB9C JUMP JUMPDEST STOP JUMPDEST MLOAD PUSH4 0x2EF5F69D PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 POP REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x210 PUSH2 0xA80 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x21C PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP4 SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP1 DUP2 DUP8 SUB PUSH2 0x1A2 JUMPI PUSH1 0x84 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xA4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0x25A SWAP1 CALLDATASIZE SWAP1 DUP13 ADD PUSH2 0xAC2 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0x266 DUP7 PUSH2 0xB26 JUMP JUMPDEST DUP10 DUP6 DUP11 AND SWAP7 DUP8 PUSH0 MSTORE DUP14 PUSH1 0x20 MSTORE DUP9 PUSH0 KECCAK256 SLOAD DUP10 MLOAD SWAP5 DUP9 PUSH1 0x20 DUP8 ADD SWAP5 PUSH32 0x7A00A9D047B8532E87561A4CFA9E3CF48A980F4DF0D4FA2E76169A8D4D102DD5 DUP7 MSTORE DUP12 DUP14 DUP10 ADD MSTORE DUP14 PUSH1 0x60 DUP10 ADD MSTORE AND PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 MSTORE PUSH2 0x100 DUP4 ADD SWAP2 DUP4 DUP4 LT SWAP1 DUP4 GT OR PUSH2 0x365 JUMPI DUP2 DUP9 MSTORE DUP3 MLOAD SWAP1 KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x120 DUP5 ADD SWAP1 DUP2 MSTORE PUSH32 0x0 PUSH2 0x122 DUP6 ADD MSTORE PUSH2 0x142 SWAP1 SWAP4 ADD MSTORE PUSH1 0x42 DUP2 MSTORE PUSH2 0x339 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x330 PUSH1 0x62 DUP3 PUSH2 0xAF0 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP9 PUSH2 0xB40 JUMP JUMPDEST DUP4 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 PUSH0 KECCAK256 SLOAD AND SUB PUSH2 0x356 JUMPI POP PUSH2 0x1E4 SWAP5 POP PUSH2 0xD74 JUMP JUMPDEST MLOAD PUSH4 0x2EF5F69D PUSH1 0xE2 SHL DUP2 MSTORE DUP6 SWAP1 REVERT JUMPDEST PUSH1 0x41 DUP14 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x39D PUSH2 0xA80 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x2 DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x3C8 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0x3D0 PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH32 0x9BA82601182E51F8DD35A545A13E9D8716495EE8D41C4F1B65FC97F97D661927 PUSH0 DUP1 LOG2 STOP JUMPDEST DUP3 CALLVALUE PUSH2 0x1A2 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0xA678F94F5BFFC40CEFAF81A99C9B64A42700E1FC99DF73CE4EA5B0EDB83C6FAE DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI DUP2 CALLDATALOAD PUSH2 0x46C PUSH2 0xA96 JUMP JUMPDEST SWAP1 PUSH2 0x475 PUSH2 0xAAC JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP5 SWAP1 KECCAK256 SLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x4A1 JUMPI POP PUSH2 0x1E4 SWAP4 POP CALLER SWAP1 PUSH2 0xD74 JUMP JUMPDEST MLOAD PUSH4 0x2EF5F69D PUSH1 0xE2 SHL DUP2 MSTORE DUP5 SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x20 SWAP2 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 PUSH0 KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x20 SWAP2 CALLDATALOAD PUSH0 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 PUSH0 KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1A2 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH0 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x552 PUSH2 0xA80 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x55E PUSH2 0xAAC JUMP JUMPDEST SWAP3 PUSH1 0x64 CALLDATALOAD SWAP5 PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0x584 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0xAC2 JUMP JUMPDEST SWAP8 SWAP1 SWAP4 PUSH2 0x590 DUP3 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP8 AND SWAP3 DUP4 PUSH0 MSTORE DUP2 PUSH1 0x20 MSTORE DUP3 PUSH0 KECCAK256 SLOAD DUP4 MLOAD SWAP7 PUSH1 0x20 DUP9 ADD SWAP6 PUSH32 0xA678F94F5BFFC40CEFAF81A99C9B64A42700E1FC99DF73CE4EA5B0EDB83C6FAE DUP8 MSTORE DUP6 DUP10 ADD MSTORE DUP11 PUSH1 0x60 DUP10 ADD MSTORE DUP12 AND PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 MSTORE PUSH1 0xE0 DUP6 ADD SWAP4 DUP6 DUP6 LT SWAP1 DUP6 GT OR PUSH2 0x66E JUMPI POP DUP3 SWAP1 MSTORE DUP3 MLOAD SWAP1 KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP5 ADD SWAP1 DUP2 MSTORE PUSH32 0x0 PUSH2 0x102 DUP6 ADD MSTORE PUSH2 0x122 SWAP1 SWAP4 ADD MSTORE PUSH1 0x42 DUP2 MSTORE PUSH2 0x1E4 SWAP7 PUSH2 0x669 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH2 0x660 PUSH1 0x62 DUP3 PUSH2 0xAF0 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 PUSH2 0xB40 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x41 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x1A2 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x6CF PUSH2 0xA80 JUMP JUMPDEST AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x6FA PUSH2 0xA80 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x706 PUSH2 0xAAC JUMP JUMPDEST SWAP3 PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0x726 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0xAC2 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 DUP2 PUSH1 0x5 SLOAD AND SWAP2 DUP3 ISZERO PUSH2 0x7FC JUMPI SWAP1 PUSH1 0x84 PUSH1 0x20 SWAP5 SWAP4 SWAP3 DUP7 DUP9 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x469B9B71 PUSH1 0xE0 SHL DUP7 MSTORE DUP14 AND SWAP1 DUP6 ADD MSTORE DUP13 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP6 ADD MSTORE DUP2 PUSH1 0x64 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x7F2 JUMPI PUSH0 SWAP2 PUSH2 0x7B7 JUMPI JUMPDEST POP ISZERO PUSH2 0x7A8 JUMPI POP PUSH2 0x1E4 SWAP4 POP PUSH2 0xC07 JUMP JUMPDEST MLOAD PUSH4 0x6B7A15F5 PUSH1 0xE1 SHL DUP2 MSTORE DUP5 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x7EA JUMPI JUMPDEST DUP2 PUSH2 0x7D2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xAF0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1A2 JUMPI PUSH0 PUSH2 0x797 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x7C5 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP5 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x823 PUSH2 0xD49 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A2 JUMPI CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x1E4 SWAP1 PUSH2 0x87F PUSH2 0xA96 JUMP JUMPDEST SWAP1 CALLDATALOAD CALLER PUSH2 0xC07 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x1A2 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0xC21FCD4C1487E99128BCF2100FE7ADE08497B3A0531A3075CEC218AA56EF2103 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1A2 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x916 PUSH2 0xA80 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0x93E SWAP1 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0xAC2 JUMP JUMPDEST SWAP1 PUSH2 0x948 DUP4 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP9 AND SWAP5 DUP6 PUSH0 MSTORE DUP10 PUSH1 0x20 MSTORE DUP7 PUSH0 KECCAK256 SLOAD DUP8 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP2 PUSH32 0xC21FCD4C1487E99128BCF2100FE7ADE08497B3A0531A3075CEC218AA56EF2103 DUP4 MSTORE DUP9 DUP11 DUP7 ADD MSTORE DUP11 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 MSTORE PUSH1 0xC0 DUP4 ADD SWAP2 DUP4 DUP4 LT SWAP1 DUP4 GT OR PUSH2 0xA35 JUMPI DUP2 DUP9 MSTORE DUP3 MLOAD SWAP1 KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0xE0 DUP5 ADD SWAP1 DUP2 MSTORE PUSH32 0x0 PUSH1 0xE2 DUP6 ADD MSTORE PUSH2 0x102 SWAP1 SWAP4 ADD MSTORE PUSH1 0x42 DUP2 MSTORE PUSH2 0xA0A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x330 PUSH1 0x62 DUP3 PUSH2 0xAF0 JUMP JUMPDEST DUP4 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 PUSH0 KECCAK256 SLOAD AND SUB PUSH2 0xA26 JUMPI PUSH2 0x1E4 DUP4 DUP4 PUSH2 0xB9C JUMP JUMPDEST MLOAD PUSH4 0x2EF5F69D PUSH1 0xE2 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST PUSH1 0x41 DUP12 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI DUP1 PUSH32 0x7A00A9D047B8532E87561A4CFA9E3CF48A980F4DF0D4FA2E76169A8D4D102DD5 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x1A2 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x1A2 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x1A2 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB12 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST TIMESTAMP GT PUSH2 0xB2E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x819BDCD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0xB4C SWAP3 PUSH2 0xE37 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND DUP1 ISZERO SWAP1 DUP2 ISZERO PUSH2 0xB8F JUMPI JUMPDEST POP PUSH2 0xB7D JUMPI AND PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP2 SLOAD ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x20578759 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP DUP3 DUP3 AND EQ ISZERO PUSH0 PUSH2 0xB63 JUMP JUMPDEST SWAP1 DUP2 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP1 DUP2 DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH32 0x40FC318D01F3D2A4260EC6762D8DC27C93240D50D16517BE56FFFFA806F4940E PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP1 DUP4 ISZERO PUSH2 0xD37 JUMPI DUP3 ISZERO PUSH2 0xD25 JUMPI DUP3 PUSH0 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x40 SWAP1 DUP3 DUP3 PUSH0 KECCAK256 SLOAD AND PUSH2 0xD14 JUMPI DUP6 PUSH0 MSTORE PUSH1 0x2 DUP5 MSTORE DUP2 PUSH0 KECCAK256 SLOAD PUSH2 0xD03 JUMPI DUP5 PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 DUP3 PUSH0 KECCAK256 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP3 DUP9 DUP5 DUP3 SLOAD AND OR SWAP1 SSTORE DUP8 PUSH0 MSTORE PUSH1 0x2 DUP7 MSTORE DUP7 DUP5 PUSH0 KECCAK256 SSTORE AND SWAP3 DUP4 PUSH2 0xCA6 JUMPI JUMPDEST POP POP MLOAD SWAP1 DUP2 MSTORE PUSH32 0x3DD7415EA1C3934B25F4A05EE43968C346015575490B276D1E966D862C64816C SWAP2 SWAP1 LOG3 JUMP JUMPDEST DUP6 PUSH0 MSTORE PUSH1 0x3 DUP6 MSTORE DUP3 PUSH0 KECCAK256 SLOAD AND PUSH2 0xCF2 JUMPI PUSH0 DUP6 DUP2 MSTORE PUSH1 0x3 DUP6 MSTORE DUP3 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE PUSH32 0x3DD7415EA1C3934B25F4A05EE43968C346015575490B276D1E966D862C64816C SWAP1 PUSH2 0xC7A JUMP JUMPDEST DUP2 MLOAD PUSH4 0x1BB0DDFB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH4 0x34B3FB37 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH4 0x1F2C68C1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7A93ADF7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xD5C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 SWAP1 SWAP2 SWAP1 DUP5 ISZERO PUSH2 0xD37 JUMPI DUP5 PUSH0 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x2 DUP4 MSTORE PUSH1 0x40 SWAP1 DUP2 PUSH0 KECCAK256 SLOAD PUSH2 0xD03 JUMPI SWAP1 DUP6 PUSH32 0xFB1B10075CB2FABC098C864DA78ADA292C7B57DDF48E1192434B237194971526 SWAP5 SWAP4 SWAP3 AND SWAP6 DUP7 PUSH0 MSTORE PUSH1 0x2 DUP5 MSTORE PUSH0 DUP3 DUP2 KECCAK256 SSTORE DUP6 PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP2 PUSH0 KECCAK256 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP4 DUP10 DUP6 DUP3 SLOAD AND OR SWAP1 SSTORE DUP9 PUSH0 MSTORE PUSH1 0x2 DUP6 MSTORE DUP7 DUP4 PUSH0 KECCAK256 SSTORE AND SWAP2 DUP3 ISZERO ISZERO PUSH0 EQ PUSH2 0xE22 JUMPI DUP6 PUSH0 MSTORE PUSH1 0x3 DUP5 MSTORE DUP3 DUP3 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE JUMPDEST MLOAD SWAP1 DUP2 MSTORE LOG4 JUMP JUMPDEST DUP6 PUSH0 MSTORE PUSH1 0x3 DUP5 MSTORE DUP2 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD AND SWAP1 SSTORE PUSH2 0xE1B JUMP JUMPDEST SWAP3 SWAP2 PUSH1 0x41 SUB PUSH2 0xE6A JUMPI PUSH2 0xE5D DUP2 PUSH2 0xE66 SWAP3 CALLDATALOAD DUP1 SWAP6 PUSH1 0x40 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP4 ADD CALLDATALOAD PUSH0 BYTE SWAP1 PUSH2 0xE72 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xEFF JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP2 POP DUP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0xEF4 JUMPI SWAP2 PUSH1 0x20 SWAP4 PUSH1 0x80 SWAP3 PUSH1 0xFF PUSH0 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0xEE9 JUMPI PUSH0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xEDF JUMPI SWAP1 PUSH0 SWAP1 PUSH0 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 PUSH1 0x1 SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xF6E JUMPI DUP1 PUSH2 0xF11 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0xF2B JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0xF4C JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0xF56 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xE3 0xCE CALL DUP14 PUSH26 0x9B5548B0B5E1B4E1FA051A1A0F421B4EB79E8633BCA2C4F342A7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "1370:9881:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1370:9881:3;;;;;;:::i;:::-;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;1370:9881:3;;;;2627:22:0;;2623:91;;1370:9881:3;;;;;-1:-1:-1;;;;;1370:9881:3;;;;;;;;3052:40:0;1370:9881:3;3052:40:0;;1370:9881:3;2623:91:0;1370:9881:3;;;;;2672:31:0;;;;;;;;1370:9881:3;2672:31:0;1370:9881:3;;;;;;;;;;;;-1:-1:-1;;1370:9881:3;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1370:9881:3;4592:10;4573:29;4569:55;;4647:10;4592;;4647;:::i;:::-;1370:9881;4569:55;1370:9881;-1:-1:-1;;;4611:13:3;;1370:9881;-1:-1:-1;4611:13:3;1370:9881;;;;;;;;-1:-1:-1;;1370:9881:3;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1370:9881:3;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5984:8;;;;;;:::i;:::-;1370:9881;;;;;;;;;;;;;;;;;9981:79;;1370:9881;9981:79;;1370:9881;3184:113;1370:9881;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9981:79;;1370:9881;;;;;;;;;;;;;;;;;;9971:90;;-1:-1:-1;;;10088:58:3;;;1370:9881;;;10117:16;1370:9881;;;;;;;;;10088:58;;;6100:3;;;1370:9881;10088:58;;;1370:9881;10088:58;:::i;:::-;1370:9881;10078:69;;6100:3;;:::i;:::-;1370:9881;;;;;;;;;;;6119:25;6115:51;;6209:8;;;;;:::i;6115:51::-;1370:9881;-1:-1:-1;;;6153:13:3;;1370:9881;;6153:13;1370:9881;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1370:9881:3;;;;;;-1:-1:-1;;;;;1370:9881:3;;:::i;:::-;;;;1648:45;1370:9881;;;;;;;;;;;;;;;;;;-1:-1:-1;;1370:9881:3;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;4069:49:3;1370:9881;;-1:-1:-1;;;;;;1370:9881:3;-1:-1:-1;;;;;1370:9881:3;;;;;;;;;4133:30;-1:-1:-1;;4133:30:3;1370:9881;;;;;;;;-1:-1:-1;;1370:9881:3;;;;;;;2696:89;1370:9881;;;;;;;;;;;-1:-1:-1;;1370:9881:3;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;1370:9881:3;4870:10;4851:29;4847:55;;4870:10;4949:8;4870:10;;;4949:8;;:::i;4847:55::-;1370:9881;-1:-1:-1;;;4889:13:3;;1370:9881;;4889:13;1370:9881;;;;;;;;-1:-1:-1;;1370:9881:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1370:9881:3;;;;;;;;;1760:45;1370:9881;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1370:9881:3;;;;;;;;-1:-1:-1;;;;;1370:9881:3;;;;;;;;;;;;;;;;-1:-1:-1;;1370:9881:3;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5252:8;;;;;;:::i;:::-;1370:9881;;;;;;;;;;;;;;;;;;;;;;9208:62;1370:9881;9208:62;;1370:9881;2696:89;1370:9881;;;;;;;;;;;;;;;;;;;;;;;;;;9208:62;;1370:9881;;;;;;;;;;;;;-1:-1:-1;1370:9881:3;;;;;9198:73;;-1:-1:-1;;;9298:58:3;;;1370:9881;;;9327:16;1370:9881;;;;;;;;;9298:58;;;5384:5;;5351:3;;5384:5;;5351:3;;9298:58;;1370:9881;9298:58;:::i;:::-;1370:9881;9288:69;;5351:3;;:::i;:::-;5384:5;:::i;1370:9881::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1370:9881:3;;;;1970:44;1370:9881;;;-1:-1:-1;;;;;1370:9881:3;;;;;;;;;;;;;;;;-1:-1:-1;;1370:9881:3;;;;;;-1:-1:-1;;;;;1370:9881:3;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1370:9881:3;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;6624:13;1370:9881;;6651:24;;;6647:50;;1370:9881;;;;;;;;;;;;;;;;;;;6712:32;;1370:9881;;6712:32;;;1370:9881;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1370:9881:3;;;6712:32;;;;;;;;;;1370:9881;6712:32;;;1370:9881;6711:33;;6707:64;;6800:5;;;;;:::i;6707:64::-;1370:9881;-1:-1:-1;;;6753:18:3;;1370:9881;;6753:18;6712:32;;;1370:9881;6712:32;;1370:9881;6712:32;;;;;;1370:9881;6712:32;;;:::i;:::-;;;1370:9881;;;;;;;;;;;;6712:32;;;;;;-1:-1:-1;6712:32:3;;;1370:9881;;;;;;;;;6647:50;-1:-1:-1;1370:9881:3;;-1:-1:-1;;;6684:13:3;;;1370:9881;;;;;;-1:-1:-1;;1370:9881:3;;;;1500:62:0;;:::i;:::-;1370:9881:3;;;-1:-1:-1;;;;;;1370:9881:3;;;;-1:-1:-1;;;;;1370:9881:3;3052:40:0;1370:9881:3;;3052:40:0;1370:9881:3;;;;;;;;-1:-1:-1;;1370:9881:3;;;;4454:5;1370:9881;;;:::i;:::-;;;4437:10;4454:5;:::i;1370:9881::-;;;;;;;-1:-1:-1;;1370:9881:3;;;;;;;2927:77;1370:9881;;;;;;;;;;-1:-1:-1;;1370:9881:3;;;;;;;2503:41;1370:9881;;;;;;;;;;;-1:-1:-1;;1370:9881:3;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5565:8;;;;:::i;:::-;1370:9881;;;;;;;;;;;;;;;;;;;;;;9564:57;1370:9881;9564:57;;1370:9881;2927:77;1370:9881;;;;;;;;;;;;;;;;;;;;;9564:57;;1370:9881;;;;;;;;;;;;;;;;;;9554:68;;-1:-1:-1;;;1370:9881:3;9649:58;;1370:9881;;;9678:16;1370:9881;;;;;;;;;9649:58;;;5659:3;;;1370:9881;9649:58;;;1370:9881;9649:58;:::i;5659:3::-;1370:9881;;;;;;;;;;;5678:25;5674:51;;5748:6;;;;:::i;5674:51::-;1370:9881;-1:-1:-1;;;5712:13:3;;1370:9881;;5712:13;1370:9881;;;;;;;;;;;;;;;;;;-1:-1:-1;;1370:9881:3;;;;;3184:113;1370:9881;;;;;;;;-1:-1:-1;;;;;1370:9881:3;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1370:9881:3;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1370:9881:3;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;11119:130;11189:15;:26;11185:57;;11119:130::o;11185:57::-;1370:9881;;-1:-1:-1;;;11224:18:3;;;;;10160:437;;;;10286:21;10160:437;10286:21;:::i;:::-;-1:-1:-1;;;;;;1370:9881:3;;;;10321:23;;;:54;;;;10160:437;10317:82;;;1370:9881;10342:1;1370:9881;10422:6;1370:9881;;;10342:1;1370:9881;10579:1;1370:9881;;;;;10160:437::o;10317:82::-;1370:9881;;-1:-1:-1;;;10384:15:3;;;;;10321:54;1370:9881;;;;;10348:27;;10321:54;;;7936:197;;1370:9881;8001:22;1370:9881;8008:10;1370:9881;;;8001:22;1370:9881;-1:-1:-1;;;;;1370:9881:3;;;;;;;;;;;;;8001:22;1370:9881;;;;;;;;;;;;;;;8001:22;1370:9881;8072:10;1370:9881;;8001:22;1370:9881;;;;8105:21;8001:22;8105:21;;7936:197::o;7333:597::-;-1:-1:-1;;;;;1370:9881:3;;;;7333:597;7415:20;;7411:46;;7471:8;;7467:35;;1370:9881;7433:1;1370:9881;;;7534:10;1370:9881;;;;;;7433:1;1370:9881;;;7530:60;;1370:9881;7433:1;1370:9881;7604:10;1370:9881;;;7433:1;1370:9881;;7600:56;;1370:9881;7433:1;1370:9881;7534:10;1370:9881;;;;7433:1;1370:9881;;-1:-1:-1;;;;;1370:9881:3;;;;;;;;;;;;7433:1;1370:9881;7604:10;1370:9881;;;;7433:1;1370:9881;;;7740:19;;7736:146;;7333:597;-1:-1:-1;;1370:9881:3;;;;7897:26;;1370:9881;7897:26;7333:597::o;7736:146::-;1370:9881;7433:1;1370:9881;7779:10;1370:9881;;;7433:1;1370:9881;;;7775:59;;7433:1;1370:9881;;;7779:10;1370:9881;;;;;;;;;;;;;;;7897:26;;7736:146;;7775:59;1370:9881;;-1:-1:-1;;;7817:17:3;;;;;7600:56;1370:9881;;-1:-1:-1;;;7636:20:3;;;;;7530:60;1370:9881;;-1:-1:-1;;;7572:18:3;;;;;7467:35;1370:9881;;-1:-1:-1;;;7488:14:3;;;;;7411:46;1370:9881;;-1:-1:-1;;;7444:13:3;;;;;1796:162:0;1710:6;1370:9881:3;-1:-1:-1;;;;;1370:9881:3;735:10:1;1855:23:0;1851:101;;1796:162::o;1851:101::-;1370:9881:3;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;1370:9881:3;;;1901:40:0;8139:758:3;-1:-1:-1;;;;;1370:9881:3;;;;8139:758;;;8248:22;;8244:48;;1370:9881;8268:1;1370:9881;;;8306:10;1370:9881;;;;;8268:1;1370:9881;;8302:58;;1370:9881;;8844:46;1370:9881;;;;;;8268:1;1370:9881;8306:10;1370:9881;;8268:1;1370:9881;;;;;8268:1;1370:9881;8465:10;1370:9881;;;8268:1;1370:9881;;-1:-1:-1;;;;;1370:9881:3;;;;;;;;;;;;8268:1;1370:9881;8306:10;1370:9881;;;;8268:1;1370:9881;;;8633:22;;;;8629:200;1370:9881;;;;8268:1;1370:9881;;;;;;8268:1;1370:9881;;;;;;;;8629:200;1370:9881;;;;8844:46;8139:758::o;8629:200::-;1370:9881;8268:1;1370:9881;;;;;8268:1;1370:9881;;;;;;;8629:200;;10603:510;;;10726:2;10712:16;10708:53;;7051:25:2;10882:173:3;7105:8:2;10882:173:3;;;;;;;;;;;;-1:-1:-1;10882:173:3;7051:25:2;;:::i;:::-;7105:8;;;;;:::i;:::-;11064:42:3;10603:510;:::o;10708:53::-;-1:-1:-1;10746:1:3;;-1:-1:-1;10746:1:3;;10730:31::o;5203:1551:2:-;;;6283:66;6270:79;;6266:164;;1370:9881:3;;;;;;-1:-1:-1;1370:9881:3;;;;;;;;;;;;;;;;;;;6541:24:2;;;;;;;;;-1:-1:-1;6541:24:2;-1:-1:-1;;;;;1370:9881:3;;6579:20:2;6575:113;;6698:49;-1:-1:-1;6698:49:2;-1:-1:-1;5203:1551:2;:::o;6575:113::-;6615:62;-1:-1:-1;6615:62:2;6541:24;6615:62;-1:-1:-1;6615:62:2;:::o;6541:24::-;1370:9881:3;;;-1:-1:-1;1370:9881:3;;;;;6266:164:2;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o;7280:532::-;1370:9881:3;;;;;;7366:29:2;;;7411:7;;:::o;7362:444::-;1370:9881:3;7462:38:2;;1370:9881:3;;;;-1:-1:-1;;;7523:23:2;;1370:9881:3;;7523:23:2;7458:348;7576:35;7567:44;;7576:35;;1370:9881:3;;-1:-1:-1;;;7634:46:2;;1370:9881:3;7634:46:2;;1370:9881:3;;;;;7634:46:2;7563:243;7710:30;7701:39;7697:109;;7563:243;7280:532::o;7697:109::-;1370:9881:3;;;;7763:32:2;;;;;;1370:9881:3;7763:32:2;;1370:9881:3;7763:32:2;1370:9881:3;;;;7375:20:2;1370:9881:3;;;;;7375:20:2;1370:9881:3"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "804800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"LINK_TYPEHASH()": "542",
								"TRANSFER_TYPEHASH()": "160",
								"UNLINK_TYPEHASH()": "234",
								"fidToOwner(uint256)": "2686",
								"fidToVault(uint256)": "2664",
								"getFidByOwner(address)": "2578",
								"getOwnerByFid(uint256)": "2532",
								"getVaultByFid(uint256)": "2620",
								"link(uint256,address)": "79559",
								"linkWithProof(address,uint256,address,bytes)": "infinite",
								"linkWithSig(address,uint256,address,uint256,bytes)": "infinite",
								"nonces(address)": "2621",
								"owner()": "2580",
								"ownerToFid(address)": "2842",
								"proofVerifier()": "2515",
								"renounceOwnership()": "28172",
								"setProofVerifier(address)": "28172",
								"transfer(uint256,address,address)": "83185",
								"transferOwnership(address)": "28659",
								"transferWithSig(address,uint256,address,address,uint256,bytes)": "infinite",
								"unlink(uint256)": "58024",
								"unlinkWithSig(address,uint256,uint256,bytes)": "infinite"
							},
							"internal": {
								"_checkDeadline(uint256)": "infinite",
								"_hashLink(address,uint256,address,uint256,uint256)": "infinite",
								"_hashTransfer(address,uint256,address,address,uint256,uint256)": "infinite",
								"_hashUnlink(address,uint256,uint256,uint256)": "infinite",
								"_link(address,uint256,address)": "infinite",
								"_recover(bytes32,bytes calldata)": "infinite",
								"_transfer(uint256,address,address,address)": "infinite",
								"_unlink(uint256,address)": "55182",
								"_verifyAndBump(address,bytes32,bytes calldata)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3326,
									"end": 3336,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3326,
									"end": 3336,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3326,
									"end": 3336,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1370,
									"end": 11251,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4661726361737465725265676973747279"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "78"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3695,
									"end": 3732,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1370,
									"end": 11251,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3750,
									"end": 3771,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3477,
									"end": 3841,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3477,
									"end": 3841,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3477,
									"end": 3841,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3582,
									"end": 3677,
									"name": "PUSH",
									"source": 3,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3373,
									"end": 3426,
									"name": "CHAINID",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3822,
									"end": 3826,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 3477,
									"end": 3841,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3477,
									"end": 3841,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "C0"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3454,
									"end": 3851,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3454,
									"end": 3851,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 3435,
									"end": 3851,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "622"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "RETURN",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B71"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "LT",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1370,
									"end": 11251,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1370,
									"end": 11251,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122098e3cef18d799b5548b0b5e1b4e1fa051a1a0f421b4eb79e8633bca2c4f342a764736f6c63430008180033",
									".code": [
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "BF26F4"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "1D59E7E8"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "3644E515"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "48BB996C"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "65AF7909"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "74E48CBA"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "76B3C1BE"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "7B9CF4F3"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "7ECEBE00"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "7FA417B3"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "8989A842"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "8A62BB16"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "BF74AE26"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "C8B6A983"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "CCB570E3"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "DDBC4A4B"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "DF6244DB"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "E2CC3D2F"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "E477C7F7"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "F1E023FD"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF7"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4592,
											"end": 4602,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4573,
											"end": 4602,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4569,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4569,
											"end": 4624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4647,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4592,
											"end": 4602,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4592,
											"end": 4602,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4647,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 4647,
											"end": 4657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4647,
											"end": 4657,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4647,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4569,
											"end": 4624,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4569,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2EF5F69D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4611,
											"end": 4624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4611,
											"end": 4624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4611,
											"end": 4624,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "A4"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5984,
											"end": 5992,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5984,
											"end": 5992,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5984,
											"end": 5992,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5984,
											"end": 5992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 5984,
											"end": 5992,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5984,
											"end": 5992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5984,
											"end": 5992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5984,
											"end": 5992,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 5984,
											"end": 5992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP14",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9981,
											"end": 10060,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9981,
											"end": 10060,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9981,
											"end": 10060,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9981,
											"end": 10060,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3297,
											"name": "PUSH",
											"source": 3,
											"value": "7A00A9D047B8532E87561A4CFA9E3CF48A980F4DF0D4FA2E76169A8D4D102DD5"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP14",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP14",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 9981,
											"end": 10060,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9981,
											"end": 10060,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9971,
											"end": 10061,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9971,
											"end": 10061,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10088,
											"end": 10146,
											"name": "PUSH",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 10088,
											"end": 10146,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10088,
											"end": 10146,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10117,
											"end": 10133,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "622"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10088,
											"end": 10146,
											"name": "PUSH",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 10088,
											"end": 10146,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10088,
											"end": 10146,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6100,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 6100,
											"end": 6103,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6100,
											"end": 6103,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10088,
											"end": 10146,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10088,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 10088,
											"end": 10146,
											"name": "PUSH",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10088,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 10088,
											"end": 10146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10088,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 10088,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10078,
											"end": 10147,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10078,
											"end": 10147,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6100,
											"end": 6103,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 6100,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 6100,
											"end": 6103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6100,
											"end": 6103,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 6100,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6119,
											"end": 6144,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6115,
											"end": 6166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 6115,
											"end": 6166,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6209,
											"end": 6217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6209,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 6209,
											"end": 6217,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6209,
											"end": 6217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6209,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 6209,
											"end": 6217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6115,
											"end": 6166,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 6115,
											"end": 6166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2EF5F69D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6153,
											"end": 6166,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6153,
											"end": 6166,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6153,
											"end": 6166,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP14",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1648,
											"end": 1693,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4069,
											"end": 4118,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4133,
											"end": 4163,
											"name": "PUSH",
											"source": 3,
											"value": "9BA82601182E51F8DD35A545A13E9D8716495EE8D41C4F1B65FC97F97D661927"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4133,
											"end": 4163,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2696,
											"end": 2785,
											"name": "PUSH",
											"source": 3,
											"value": "A678F94F5BFFC40CEFAF81A99C9B64A42700E1FC99DF73CE4EA5B0EDB83C6FAE"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4870,
											"end": 4880,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4851,
											"end": 4880,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4847,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4847,
											"end": 4902,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4870,
											"end": 4880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4870,
											"end": 4880,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4870,
											"end": 4880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4870,
											"end": 4880,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4957,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 4949,
											"end": 4957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4847,
											"end": 4902,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4847,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2EF5F69D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4889,
											"end": 4902,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4889,
											"end": 4902,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4889,
											"end": 4902,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1805,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5252,
											"end": 5260,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 5252,
											"end": 5260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5252,
											"end": 5260,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5252,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 5252,
											"end": 5260,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5252,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5252,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5252,
											"end": 5260,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 5252,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9208,
											"end": 9270,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9208,
											"end": 9270,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 9208,
											"end": 9270,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 2696,
											"end": 2785,
											"name": "PUSH",
											"source": 3,
											"value": "A678F94F5BFFC40CEFAF81A99C9B64A42700E1FC99DF73CE4EA5B0EDB83C6FAE"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 9208,
											"end": 9270,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9208,
											"end": 9270,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9198,
											"end": 9271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9198,
											"end": 9271,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9298,
											"end": 9356,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 9298,
											"end": 9356,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9298,
											"end": 9356,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9327,
											"end": 9343,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "622"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9298,
											"end": 9356,
											"name": "PUSH",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 9298,
											"end": 9356,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9298,
											"end": 9356,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5384,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 5384,
											"end": 5389,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 5351,
											"end": 5354,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5384,
											"end": 5389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5384,
											"end": 5389,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5354,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9298,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 9298,
											"end": 9356,
											"name": "PUSH",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9298,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 9298,
											"end": 9356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9298,
											"end": 9356,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 9298,
											"end": 9356,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9288,
											"end": 9357,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9288,
											"end": 9357,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5354,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5351,
											"end": 5354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5354,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 5351,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5384,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 5384,
											"end": 5389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 2014,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 6637,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6651,
											"end": 6675,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6651,
											"end": 6675,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6651,
											"end": 6675,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 6647,
											"end": 6697,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "469B9B71"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP14",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6711,
											"end": 6744,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6711,
											"end": 6744,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6707,
											"end": 6771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 6707,
											"end": 6771,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6800,
											"end": 6805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6800,
											"end": 6805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 6800,
											"end": 6805,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6800,
											"end": 6805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6800,
											"end": 6805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 6800,
											"end": 6805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6707,
											"end": 6771,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 6707,
											"end": 6771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6B7A15F5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6753,
											"end": 6771,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6753,
											"end": 6771,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6753,
											"end": 6771,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 6712,
											"end": 6744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 6712,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6697,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 6647,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6684,
											"end": 6697,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6697,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6697,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4454,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4437,
											"end": 4447,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4454,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 4454,
											"end": 4459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2927,
											"end": 3004,
											"name": "PUSH",
											"source": 3,
											"value": "C21FCD4C1487E99128BCF2100FE7ADE08497B3A0531A3075CEC218AA56EF2103"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2503,
											"end": 2544,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "622"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5565,
											"end": 5573,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5565,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 5565,
											"end": 5573,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5565,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5565,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5565,
											"end": 5573,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 5565,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9564,
											"end": 9621,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9564,
											"end": 9621,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9564,
											"end": 9621,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2927,
											"end": 3004,
											"name": "PUSH",
											"source": 3,
											"value": "C21FCD4C1487E99128BCF2100FE7ADE08497B3A0531A3075CEC218AA56EF2103"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 9564,
											"end": 9621,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9564,
											"end": 9621,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9554,
											"end": 9622,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9554,
											"end": 9622,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 9649,
											"end": 9707,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9649,
											"end": 9707,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9678,
											"end": 9694,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "622"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "E2"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9649,
											"end": 9707,
											"name": "PUSH",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 9649,
											"end": 9707,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9649,
											"end": 9707,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5659,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 5659,
											"end": 5662,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5659,
											"end": 5662,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9649,
											"end": 9707,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9649,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 9649,
											"end": 9707,
											"name": "PUSH",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9649,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 9649,
											"end": 9707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5659,
											"end": 5662,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 5659,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5678,
											"end": 5703,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5674,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 5674,
											"end": 5725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5748,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 5748,
											"end": 5754,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5748,
											"end": 5754,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5748,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 5748,
											"end": 5754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5674,
											"end": 5725,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 5674,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2EF5F69D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5712,
											"end": 5725,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5712,
											"end": 5725,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5712,
											"end": 5725,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3297,
											"name": "PUSH",
											"source": 3,
											"value": "7A00A9D047B8532E87561A4CFA9E3CF48A980F4DF0D4FA2E76169A8D4D102DD5"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11119,
											"end": 11249,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 11119,
											"end": 11249,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11189,
											"end": 11204,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 11189,
											"end": 11215,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 11185,
											"end": 11242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 11185,
											"end": 11242,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11119,
											"end": 11249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11185,
											"end": 11242,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 11185,
											"end": 11242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "819BDCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11224,
											"end": 11242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11224,
											"end": 11242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11224,
											"end": 11242,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11224,
											"end": 11242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11224,
											"end": 11242,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10160,
											"end": 10597,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 10160,
											"end": 10597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10160,
											"end": 10597,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10160,
											"end": 10597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10160,
											"end": 10597,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10286,
											"end": 10307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 10160,
											"end": 10597,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10286,
											"end": 10307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 10286,
											"end": 10307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10286,
											"end": 10307,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 10286,
											"end": 10307,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10321,
											"end": 10344,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10321,
											"end": 10344,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10321,
											"end": 10344,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10321,
											"end": 10375,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10321,
											"end": 10375,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10321,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 10321,
											"end": 10375,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10160,
											"end": 10597,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 10160,
											"end": 10597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10317,
											"end": 10399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10317,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 10317,
											"end": 10399,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10343,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10422,
											"end": 10428,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10342,
											"end": 10343,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10579,
											"end": 10580,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10160,
											"end": 10597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10317,
											"end": 10399,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 10317,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20578759"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10384,
											"end": 10399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10384,
											"end": 10399,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10384,
											"end": 10399,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10384,
											"end": 10399,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10384,
											"end": 10399,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10321,
											"end": 10375,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 10321,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10348,
											"end": 10375,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10348,
											"end": 10375,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10321,
											"end": 10375,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10321,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 10321,
											"end": 10375,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7936,
											"end": 8133,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 7936,
											"end": 8133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7936,
											"end": 8133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8001,
											"end": 8023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8008,
											"end": 8018,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8001,
											"end": 8023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8001,
											"end": 8023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8001,
											"end": 8023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8072,
											"end": 8082,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8001,
											"end": 8023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8105,
											"end": 8126,
											"name": "PUSH",
											"source": 3,
											"value": "40FC318D01F3D2A4260EC6762D8DC27C93240D50D16517BE56FFFFA806F4940E"
										},
										{
											"begin": 8001,
											"end": 8023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8105,
											"end": 8126,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8105,
											"end": 8126,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7936,
											"end": 8133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7333,
											"end": 7930,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 7333,
											"end": 7930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7333,
											"end": 7930,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7415,
											"end": 7435,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7415,
											"end": 7435,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7411,
											"end": 7457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 7411,
											"end": 7457,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7471,
											"end": 7479,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7471,
											"end": 7479,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7467,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 7467,
											"end": 7502,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7433,
											"end": 7434,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7433,
											"end": 7434,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7530,
											"end": 7590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 7530,
											"end": 7590,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7433,
											"end": 7434,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7604,
											"end": 7614,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7433,
											"end": 7434,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7600,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 7600,
											"end": 7656,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7433,
											"end": 7434,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7433,
											"end": 7434,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7433,
											"end": 7434,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7604,
											"end": 7614,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7433,
											"end": 7434,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7740,
											"end": 7759,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7740,
											"end": 7759,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7736,
											"end": 7882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 7736,
											"end": 7882,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7333,
											"end": 7930,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 7333,
											"end": 7930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7897,
											"end": 7923,
											"name": "PUSH",
											"source": 3,
											"value": "3DD7415EA1C3934B25F4A05EE43968C346015575490B276D1E966D862C64816C"
										},
										{
											"begin": 7897,
											"end": 7923,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7897,
											"end": 7923,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7333,
											"end": 7930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7736,
											"end": 7882,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 7736,
											"end": 7882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7433,
											"end": 7434,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7779,
											"end": 7789,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7433,
											"end": 7434,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7775,
											"end": 7834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 7775,
											"end": 7834,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7433,
											"end": 7434,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7779,
											"end": 7789,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7897,
											"end": 7923,
											"name": "PUSH",
											"source": 3,
											"value": "3DD7415EA1C3934B25F4A05EE43968C346015575490B276D1E966D862C64816C"
										},
										{
											"begin": 7897,
											"end": 7923,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7736,
											"end": 7882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 7736,
											"end": 7882,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7775,
											"end": 7834,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 7775,
											"end": 7834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BB0DDFB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7817,
											"end": 7834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7817,
											"end": 7834,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7817,
											"end": 7834,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7817,
											"end": 7834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7817,
											"end": 7834,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7600,
											"end": 7656,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 7600,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B3FB37"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7636,
											"end": 7656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7656,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7636,
											"end": 7656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7656,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7530,
											"end": 7590,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 7530,
											"end": 7590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F2C68C1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7467,
											"end": 7502,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 7467,
											"end": 7502,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A93ADF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7488,
											"end": 7502,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7502,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7502,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7488,
											"end": 7502,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7502,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7411,
											"end": 7457,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 7411,
											"end": 7457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7444,
											"end": 7457,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7444,
											"end": 7457,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7444,
											"end": 7457,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7444,
											"end": 7457,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7444,
											"end": 7457,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8897,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 8139,
											"end": 8897,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8139,
											"end": 8897,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8139,
											"end": 8897,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8139,
											"end": 8897,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8248,
											"end": 8270,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8248,
											"end": 8270,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8244,
											"end": 8292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 8244,
											"end": 8292,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8268,
											"end": 8269,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8268,
											"end": 8269,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8302,
											"end": 8360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 8302,
											"end": 8360,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8844,
											"end": 8890,
											"name": "PUSH",
											"source": 3,
											"value": "FB1B10075CB2FABC098C864DA78ADA292C7B57DDF48E1192434B237194971526"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8268,
											"end": 8269,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8268,
											"end": 8269,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8268,
											"end": 8269,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8465,
											"end": 8475,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8268,
											"end": 8269,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 8268,
											"end": 8269,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8268,
											"end": 8269,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8633,
											"end": 8655,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8633,
											"end": 8655,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8633,
											"end": 8655,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8633,
											"end": 8655,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8629,
											"end": 8829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8268,
											"end": 8269,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8268,
											"end": 8269,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8629,
											"end": 8829,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 8629,
											"end": 8829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8844,
											"end": 8890,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 8139,
											"end": 8897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8629,
											"end": 8829,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 8629,
											"end": 8829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8268,
											"end": 8269,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8268,
											"end": 8269,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8629,
											"end": 8829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 8629,
											"end": 8829,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10603,
											"end": 11113,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 10603,
											"end": 11113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10603,
											"end": 11113,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10603,
											"end": 11113,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10726,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 10712,
											"end": 10728,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10708,
											"end": 10761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 10708,
											"end": 10761,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7051,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 10882,
											"end": 11055,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7105,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 10882,
											"end": 11055,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10882,
											"end": 11055,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 10882,
											"end": 11055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10882,
											"end": 11055,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 10882,
											"end": 11055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10882,
											"end": 11055,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10882,
											"end": 11055,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10882,
											"end": 11055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10882,
											"end": 11055,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 10882,
											"end": 11055,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10882,
											"end": 11055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10882,
											"end": 11055,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10882,
											"end": 11055,
											"name": "BYTE",
											"source": 3
										},
										{
											"begin": 7051,
											"end": 7076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7051,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 7051,
											"end": 7076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7051,
											"end": 7076,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 7051,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7113,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7113,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7113,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 7105,
											"end": 7113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7113,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 7105,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11064,
											"end": 11106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10603,
											"end": 11113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10603,
											"end": 11113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10708,
											"end": 10761,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 10708,
											"end": 10761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10746,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10746,
											"end": 10747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10746,
											"end": 10747,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10746,
											"end": 10747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10730,
											"end": 10761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6283,
											"end": 6349,
											"name": "PUSH",
											"source": 2,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6270,
											"end": 6349,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6270,
											"end": 6349,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 6747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6698,
											"end": 6747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6381,
											"end": 6382,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6385,
											"end": 6415,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6365,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7411,
											"end": 7418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7362,
											"end": 7806,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 7362,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F645EEDF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7806,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 7458,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7576,
											"end": 7611,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7576,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 7576,
											"end": 7611,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FCE698F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7563,
											"end": 7806,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 7563,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7710,
											"end": 7740,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7697,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 7697,
											"end": 7806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7563,
											"end": 7806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7280,
											"end": 7812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7697,
											"end": 7806,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 7697,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "PUSH",
											"source": 2,
											"value": "35E2F383"
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "PUSH",
											"source": 2,
											"value": "E2"
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7375,
											"end": 7395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 11251,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"LINK_TYPEHASH()": "ddbc4a4b",
							"TRANSFER_TYPEHASH()": "00bf26f4",
							"UNLINK_TYPEHASH()": "48bb996c",
							"fidToOwner(uint256)": "c8b6a983",
							"fidToVault(uint256)": "bf74ae26",
							"getFidByOwner(address)": "76b3c1be",
							"getOwnerByFid(uint256)": "7b9cf4f3",
							"getVaultByFid(uint256)": "8a62bb16",
							"link(uint256,address)": "65af7909",
							"linkWithProof(address,uint256,address,bytes)": "74e48cba",
							"linkWithSig(address,uint256,address,uint256,bytes)": "8989a842",
							"nonces(address)": "7ecebe00",
							"owner()": "8da5cb5b",
							"ownerToFid(address)": "e2cc3d2f",
							"proofVerifier()": "7fa417b3",
							"renounceOwnership()": "715018a6",
							"setProofVerifier(address)": "df6244db",
							"transfer(uint256,address,address)": "ccb570e3",
							"transferOwnership(address)": "f2fde38b",
							"transferWithSig(address,uint256,address,address,uint256,bytes)": "e477c7f7",
							"unlink(uint256)": "f1e023fd",
							"unlinkWithSig(address,uint256,uint256,bytes)": "1d59e7e8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FidAlreadyLinked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FidNotLinked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerAlreadyLinked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VerifierRejected\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"Linked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"ProofVerifierUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newVault\",\"type\":\"address\"}],\"name\":\"Transferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Unlinked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LINK_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNLINK_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fidToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fidToVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"getFidByOwner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid\",\"type\":\"uint256\"}],\"name\":\"getOwnerByFid\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid\",\"type\":\"uint256\"}],\"name\":\"getVaultByFid\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"link\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"linkWithProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"linkWithSig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerToFid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proofVerifier\",\"outputs\":[{\"internalType\":\"contract IFarcasterProofVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"setProofVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newVault\",\"type\":\"address\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"transferWithSig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fid\",\"type\":\"uint256\"}],\"name\":\"unlink\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"unlinkWithSig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fidToOwner(uint256)\":{\"notice\":\"FID -> owner\"},\"fidToVault(uint256)\":{\"notice\":\"FID -> vault (optional convenience pointer)\"},\"link(uint256,address)\":{\"notice\":\"Link caller as the owner of `fid`, optionally storing a convenience `vault` address.\"},\"linkWithProof(address,uint256,address,bytes)\":{\"notice\":\"Link using an external proof verifier (e.g., Warpcast/Neynar signature proof).         Callable by anyone; proofVerifier decides validity.\"},\"nonces(address)\":{\"notice\":\"Nonces for EIP-712 (per-owner)\"},\"ownerToFid(address)\":{\"notice\":\"owner -> FID (0 if none)\"},\"proofVerifier()\":{\"notice\":\"Optional external verifier for offchain proofs\"},\"setProofVerifier(address)\":{\"notice\":\"Set/replace external proof verifier\"},\"transfer(uint256,address,address)\":{\"notice\":\"Transfer `fid` from caller to `newOwner`, optionally updating `newVault`.\"},\"unlink(uint256)\":{\"notice\":\"Unlink caller from their `fid`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":\"FarcasterRegistry\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":{\"keccak256\":\"0x6663193190c1179f67880c62c7a4116857f8f909939c5f0b3325318d8f5f460a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd9c25bfbb03df3d033cecb96c3c6a8fe9e484e054b247f01f489d9aafc80c86\",\"dweb:/ipfs/QmV8y6oDRyqRGJnCq8zyjr9T2srkdEf7sRoM1HMz9y8exU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol:FarcasterRegistry",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 573,
								"contract": "src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol:FarcasterRegistry",
								"label": "fidToOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 578,
								"contract": "src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol:FarcasterRegistry",
								"label": "ownerToFid",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 583,
								"contract": "src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol:FarcasterRegistry",
								"label": "fidToVault",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 588,
								"contract": "src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol:FarcasterRegistry",
								"label": "nonces",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 592,
								"contract": "src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol:FarcasterRegistry",
								"label": "proofVerifier",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IFarcasterProofVerifier)543"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IFarcasterProofVerifier)543": {
								"encoding": "inplace",
								"label": "contract IFarcasterProofVerifier",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"fidToOwner(uint256)": {
								"notice": "FID -> owner"
							},
							"fidToVault(uint256)": {
								"notice": "FID -> vault (optional convenience pointer)"
							},
							"link(uint256,address)": {
								"notice": "Link caller as the owner of `fid`, optionally storing a convenience `vault` address."
							},
							"linkWithProof(address,uint256,address,bytes)": {
								"notice": "Link using an external proof verifier (e.g., Warpcast/Neynar signature proof).         Callable by anyone; proofVerifier decides validity."
							},
							"nonces(address)": {
								"notice": "Nonces for EIP-712 (per-owner)"
							},
							"ownerToFid(address)": {
								"notice": "owner -> FID (0 if none)"
							},
							"proofVerifier()": {
								"notice": "Optional external verifier for offchain proofs"
							},
							"setProofVerifier(address)": {
								"notice": "Set/replace external proof verifier"
							},
							"transfer(uint256,address,address)": {
								"notice": "Transfer `fid` from caller to `newOwner`, optionally updating `newVault`."
							},
							"unlink(uint256)": {
								"notice": "Unlink caller from their `fid`."
							}
						},
						"version": 1
					}
				},
				"IFarcasterProofVerifier": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fid",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "proof",
									"type": "bytes"
								}
							],
							"name": "verifyLink",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"verifyLink(address,uint256,bytes)": "469b9b71"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fid\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"verifyLink\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":\"IFarcasterProofVerifier\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol\":{\"keccak256\":\"0x6663193190c1179f67880c62c7a4116857f8f909939c5f0b3325318d8f5f460a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd9c25bfbb03df3d033cecb96c3c6a8fe9e484e054b247f01f489d9aafc80c86\",\"dweb:/ipfs/QmV8y6oDRyqRGJnCq8zyjr9T2srkdEf7sRoM1HMz9y8exU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							525
						]
					},
					"id": 526,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 180,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:2",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 525,
							"linearizedBaseContracts": [
								525
							],
							"name": "ECDSA",
							"nameLocation": "352:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 185,
									"members": [
										{
											"id": 181,
											"name": "NoError",
											"nameLocation": "392:7:2",
											"nodeType": "EnumValue",
											"src": "392:7:2"
										},
										{
											"id": 182,
											"name": "InvalidSignature",
											"nameLocation": "409:16:2",
											"nodeType": "EnumValue",
											"src": "409:16:2"
										},
										{
											"id": 183,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:2",
											"nodeType": "EnumValue",
											"src": "435:22:2"
										},
										{
											"id": 184,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:2",
											"nodeType": "EnumValue",
											"src": "467:17:2"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:2",
									"nodeType": "EnumDefinition",
									"src": "364:126:2"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:2",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 188,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:2"
									},
									"src": "564:30:2"
								},
								{
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:2",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 193,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "699:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:2"
									},
									"src": "665:50:2"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:2",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 198,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "840:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 195,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:2"
									},
									"src": "811:40:2"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "2285:622:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 213,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "2299:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2309:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2299:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2319:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2299:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 248,
													"nodeType": "Block",
													"src": "2793:108:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 237,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2823:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2815:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 235,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2815:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2815:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 239,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 185,
																			"src": "2827:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$185_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2840:22:2",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 183,
																		"src": "2827:35:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$185",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 243,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 203,
																					"src": "2872:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 244,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2882:6:2",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2872:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2864:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 241,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2864:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2864:25:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 246,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2814:76:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 212,
															"id": 247,
															"nodeType": "Return",
															"src": "2807:83:2"
														}
													]
												},
												"id": 249,
												"nodeType": "IfStatement",
												"src": "2295:606:2",
												"trueBody": {
													"id": 234,
													"nodeType": "Block",
													"src": "2323:464:2",
													"statements": [
														{
															"assignments": [
																218
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 218,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2345:1:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 234,
																	"src": "2337:9:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 217,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2337:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 219,
															"nodeType": "VariableDeclarationStatement",
															"src": "2337:9:2"
														},
														{
															"assignments": [
																221
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 221,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2368:1:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 234,
																	"src": "2360:9:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 220,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2360:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 222,
															"nodeType": "VariableDeclarationStatement",
															"src": "2360:9:2"
														},
														{
															"assignments": [
																224
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 224,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2389:1:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 234,
																	"src": "2383:7:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 223,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2383:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 225,
															"nodeType": "VariableDeclarationStatement",
															"src": "2383:7:2"
														},
														{
															"AST": {
																"nativeSrc": "2560:171:2",
																"nodeType": "YulBlock",
																"src": "2560:171:2",
																"statements": [
																	{
																		"nativeSrc": "2578:32:2",
																		"nodeType": "YulAssignment",
																		"src": "2578:32:2",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2593:9:2",
																							"nodeType": "YulIdentifier",
																							"src": "2593:9:2"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2604:4:2",
																							"nodeType": "YulLiteral",
																							"src": "2604:4:2",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2589:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "2589:3:2"
																					},
																					"nativeSrc": "2589:20:2",
																					"nodeType": "YulFunctionCall",
																					"src": "2589:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2583:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2583:5:2"
																			},
																			"nativeSrc": "2583:27:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2583:27:2"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2578:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "2578:1:2"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2627:32:2",
																		"nodeType": "YulAssignment",
																		"src": "2627:32:2",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2642:9:2",
																							"nodeType": "YulIdentifier",
																							"src": "2642:9:2"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2653:4:2",
																							"nodeType": "YulLiteral",
																							"src": "2653:4:2",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2638:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "2638:3:2"
																					},
																					"nativeSrc": "2638:20:2",
																					"nodeType": "YulFunctionCall",
																					"src": "2638:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2632:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2632:5:2"
																			},
																			"nativeSrc": "2632:27:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2632:27:2"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2627:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "2627:1:2"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2676:41:2",
																		"nodeType": "YulAssignment",
																		"src": "2676:41:2",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2686:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2686:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2699:9:2",
																									"nodeType": "YulIdentifier",
																									"src": "2699:9:2"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2710:4:2",
																									"nodeType": "YulLiteral",
																									"src": "2710:4:2",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2695:3:2",
																								"nodeType": "YulIdentifier",
																								"src": "2695:3:2"
																							},
																							"nativeSrc": "2695:20:2",
																							"nodeType": "YulFunctionCall",
																							"src": "2695:20:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2689:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "2689:5:2"
																					},
																					"nativeSrc": "2689:27:2",
																					"nodeType": "YulFunctionCall",
																					"src": "2689:27:2"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2681:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "2681:4:2"
																			},
																			"nativeSrc": "2681:36:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2681:36:2"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2676:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "2676:1:2"
																			}
																		]
																	}
																]
															},
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 218,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2578:1:2",
																	"valueSize": 1
																},
																{
																	"declaration": 221,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2627:1:2",
																	"valueSize": 1
																},
																{
																	"declaration": 203,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2593:9:2",
																	"valueSize": 1
																},
																{
																	"declaration": 203,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2642:9:2",
																	"valueSize": 1
																},
																{
																	"declaration": 203,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2699:9:2",
																	"valueSize": 1
																},
																{
																	"declaration": 224,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2676:1:2",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 226,
															"nodeType": "InlineAssembly",
															"src": "2535:196:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 228,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 201,
																		"src": "2762:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 229,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "2768:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 230,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "2771:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 231,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "2774:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 227,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		251,
																		331,
																		439
																	],
																	"referencedDeclaration": 439,
																	"src": "2751:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2751:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 212,
															"id": 233,
															"nodeType": "Return",
															"src": "2744:32:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:2",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2166:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2158:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 200,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2193:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2180:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 202,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2180:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:60:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "recovered",
												"nameLocation": "2240:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2232:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2232:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "err",
												"nameLocation": "2264:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2251:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$185",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 208,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 207,
														"name": "RecoverError",
														"nameLocations": [
															"2251:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 185,
														"src": "2251:12:2"
													},
													"referencedDeclaration": 185,
													"src": "2251:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$185",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "errArg",
												"nameLocation": "2277:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2269:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 210,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2269:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2231:53:2"
									},
									"scope": 525,
									"src": "2129:778:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "3801:168:2",
										"statements": [
											{
												"assignments": [
													262,
													265,
													267
												],
												"declarations": [
													{
														"constant": false,
														"id": 262,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3820:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 280,
														"src": "3812:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 261,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3812:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 265,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3844:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 280,
														"src": "3831:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$185",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 264,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 263,
																"name": "RecoverError",
																"nameLocations": [
																	"3831:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 185,
																"src": "3831:12:2"
															},
															"referencedDeclaration": 185,
															"src": "3831:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3859:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 280,
														"src": "3851:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 266,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3851:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 272,
												"initialValue": {
													"arguments": [
														{
															"id": 269,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "3882:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 270,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "3888:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 268,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															251,
															331,
															439
														],
														"referencedDeclaration": 251,
														"src": "3871:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3871:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3811:87:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 274,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "3920:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 275,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "3927:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 273,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "3908:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$185_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3908:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "3908:28:2"
											},
											{
												"expression": {
													"id": 278,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 262,
													"src": "3953:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 260,
												"id": 279,
												"nodeType": "Return",
												"src": "3946:16:2"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "2913:796:2",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3723:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3739:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "3731:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 253,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3758:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "3745:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3745:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3730:38:2"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "3792:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3792:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3791:9:2"
									},
									"scope": 525,
									"src": "3714:255:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "4348:342:2",
										"statements": [
											{
												"id": 329,
												"nodeType": "UncheckedBlock",
												"src": "4358:326:2",
												"statements": [
													{
														"assignments": [
															299
														],
														"declarations": [
															{
																"constant": false,
																"id": 299,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4390:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 329,
																"src": "4382:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 298,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4382:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 306,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 300,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "4394:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4407:66:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4399:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 301,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4399:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4399:75:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4394:80:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4382:92:2"
													},
													{
														"assignments": [
															308
														],
														"declarations": [
															{
																"constant": false,
																"id": 308,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4591:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 329,
																"src": "4585:7:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 307,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4585:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 321,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 316,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 313,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 288,
																							"src": "4610:2:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 312,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4602:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 311,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4602:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 314,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4602:11:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 315,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4617:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4602:18:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 317,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4601:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4624:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4601:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4595:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 309,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4595:5:2",
																	"typeDescriptions": {}
																}
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4595:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4585:42:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 323,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "4659:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 324,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "4665:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 325,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "4668:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 326,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "4671:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 322,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	251,
																	331,
																	439
																],
																"referencedDeclaration": 439,
																"src": "4648:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4648:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 297,
														"id": 328,
														"nodeType": "Return",
														"src": "4641:32:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "3975:205:2",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4194:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4222:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4214:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 283,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4214:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4244:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4236:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 285,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4263:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4255:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 287,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4255:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4204:67:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "recovered",
												"nameLocation": "4303:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4295:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4295:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "err",
												"nameLocation": "4327:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4314:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$185",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 293,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 292,
														"name": "RecoverError",
														"nameLocations": [
															"4314:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 185,
														"src": "4314:12:2"
													},
													"referencedDeclaration": 185,
													"src": "4314:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$185",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "errArg",
												"nameLocation": "4340:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4332:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 295,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4332:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4294:53:2"
									},
									"scope": 525,
									"src": "4185:505:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "4903:164:2",
										"statements": [
											{
												"assignments": [
													344,
													347,
													349
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4922:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "4914:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 343,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4914:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 347,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4946:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "4933:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$185",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 346,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 345,
																"name": "RecoverError",
																"nameLocations": [
																	"4933:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 185,
																"src": "4933:12:2"
															},
															"referencedDeclaration": 185,
															"src": "4933:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 349,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4961:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "4953:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 348,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4953:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"arguments": [
														{
															"id": 351,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "4984:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 352,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "4990:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 353,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "4993:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 350,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															251,
															331,
															439
														],
														"referencedDeclaration": 331,
														"src": "4973:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4973:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4913:83:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 357,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "5018:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 358,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "5025:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 356,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "5006:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$185_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5006:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "5006:28:2"
											},
											{
												"expression": {
													"id": 361,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 344,
													"src": "5051:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 342,
												"id": 362,
												"nodeType": "Return",
												"src": "5044:16:2"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "4696:116:2",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4826:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4842:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "4834:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 333,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4834:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4856:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "4848:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 335,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4848:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4867:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "4859:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4859:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4833:37:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "4894:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4894:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4893:9:2"
									},
									"scope": 525,
									"src": "4817:250:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "5382:1372:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 385,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "6278:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6270:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 383,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6270:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6270:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6283:66:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6270:79:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 399,
												"nodeType": "IfStatement",
												"src": "6266:164:2",
												"trueBody": {
													"id": 398,
													"nodeType": "Block",
													"src": "6351:79:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6381:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6373:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 389,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6373:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 393,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 185,
																			"src": "6385:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$185_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6398:17:2",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 184,
																		"src": "6385:30:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$185",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 395,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "6417:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 396,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6372:47:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 382,
															"id": 397,
															"nodeType": "Return",
															"src": "6365:54:2"
														}
													]
												}
											},
											{
												"assignments": [
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6532:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 438,
														"src": "6524:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 400,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6524:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 408,
												"initialValue": {
													"arguments": [
														{
															"id": 403,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "6551:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 404,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "6557:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 405,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "6560:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 406,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "6563:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 402,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6541:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6524:41:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 409,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "6579:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6597:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6589:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 410,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6589:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6589:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6579:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 428,
												"nodeType": "IfStatement",
												"src": "6575:113:2",
												"trueBody": {
													"id": 427,
													"nodeType": "Block",
													"src": "6601:87:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6631:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6623:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 415,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6623:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6623:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 419,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 185,
																			"src": "6635:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$185_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6648:16:2",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 182,
																		"src": "6635:29:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$185",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 423,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6674:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6666:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 421,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6666:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6666:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 425,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6622:55:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 382,
															"id": 426,
															"nodeType": "Return",
															"src": "6615:62:2"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 429,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "6706:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 430,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "6714:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$185_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6727:7:2",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "6714:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6744:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6736:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 432,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6736:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6736:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 436,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6705:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 382,
												"id": 437,
												"nodeType": "Return",
												"src": "6698:49:2"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "5073:125:2",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5212:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5240:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5232:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 366,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5232:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5260:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5254:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 368,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5254:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5279:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5271:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 370,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5271:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5298:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5290:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5290:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5222:83:2"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "recovered",
												"nameLocation": "5337:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5329:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5329:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "err",
												"nameLocation": "5361:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5348:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$185",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 378,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 377,
														"name": "RecoverError",
														"nameLocations": [
															"5348:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 185,
														"src": "5348:12:2"
													},
													"referencedDeclaration": 185,
													"src": "5348:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$185",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "errArg",
												"nameLocation": "5374:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5366:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 380,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5328:53:2"
									},
									"scope": 525,
									"src": "5203:1551:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "6981:166:2",
										"statements": [
											{
												"assignments": [
													454,
													457,
													459
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "7000:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "6992:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 453,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6992:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 457,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "7024:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "7011:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$185",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 456,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 455,
																"name": "RecoverError",
																"nameLocations": [
																	"7011:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 185,
																"src": "7011:12:2"
															},
															"referencedDeclaration": 185,
															"src": "7011:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 459,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "7039:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "7031:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 458,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7031:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [
														{
															"id": 461,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "7062:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 462,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "7068:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 463,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "7071:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 464,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "7074:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 460,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															251,
															331,
															439
														],
														"referencedDeclaration": 439,
														"src": "7051:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7051:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6991:85:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "7098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 469,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "7105:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 467,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "7086:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$185_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7086:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "7086:28:2"
											},
											{
												"expression": {
													"id": 472,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 454,
													"src": "7131:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 452,
												"id": 473,
												"nodeType": "Return",
												"src": "7124:16:2"
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "6760:122:2",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6896:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6912:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "6904:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 441,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6904:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6924:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "6918:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 443,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6918:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6935:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "6927:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 445,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6927:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6946:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "6938:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 447,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6938:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6903:45:2"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "6972:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6972:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6971:9:2"
									},
									"scope": 525,
									"src": "6887:260:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "7352:460:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$185",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 484,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "7366:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$185",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 485,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "7375:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$185_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7388:7:2",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 181,
														"src": "7375:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$185",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7366:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$185",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 490,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "7462:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 491,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "7471:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$185_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7484:16:2",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "7471:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7462:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 498,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "7567:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$185",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 499,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "7576:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$185_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7589:22:2",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 183,
																"src": "7576:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$185",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7567:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$185",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 510,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "7701:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$185",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 511,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "7710:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$185_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7723:17:2",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 184,
																	"src": "7710:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$185",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7701:39:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 519,
															"nodeType": "IfStatement",
															"src": "7697:109:2",
															"trueBody": {
																"id": 518,
																"nodeType": "Block",
																"src": "7742:64:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 515,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 481,
																					"src": "7786:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 514,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 198,
																				"src": "7763:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																					"typeString": "function (bytes32) pure"
																				}
																			},
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7763:32:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 517,
																		"nodeType": "RevertStatement",
																		"src": "7756:39:2"
																	}
																]
															}
														},
														"id": 520,
														"nodeType": "IfStatement",
														"src": "7563:243:2",
														"trueBody": {
															"id": 509,
															"nodeType": "Block",
															"src": "7613:78:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 505,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 481,
																						"src": "7670:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 504,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7662:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 503,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7662:7:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7662:17:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 502,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "7634:27:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7634:46:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 508,
																	"nodeType": "RevertStatement",
																	"src": "7627:53:2"
																}
															]
														}
													},
													"id": 521,
													"nodeType": "IfStatement",
													"src": "7458:348:2",
													"trueBody": {
														"id": 497,
														"nodeType": "Block",
														"src": "7502:55:2",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 494,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 188,
																		"src": "7523:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7523:23:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 496,
																"nodeType": "RevertStatement",
																"src": "7516:30:2"
															}
														]
													}
												},
												"id": 522,
												"nodeType": "IfStatement",
												"src": "7362:444:2",
												"trueBody": {
													"id": 489,
													"nodeType": "Block",
													"src": "7397:55:2",
													"statements": [
														{
															"functionReturnParameters": 483,
															"id": 488,
															"nodeType": "Return",
															"src": "7411:7:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "7153:122:2",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7289:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7314:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7301:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$185",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 478,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 477,
														"name": "RecoverError",
														"nameLocations": [
															"7301:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 185,
														"src": "7301:12:2"
													},
													"referencedDeclaration": 185,
													"src": "7301:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$185",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7329:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7321:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 480,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7321:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7300:38:2"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7352:0:2"
									},
									"scope": 525,
									"src": "7280:532:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 526,
							"src": "344:7470:2",
							"usedErrors": [
								188,
								193,
								198
							],
							"usedEvents": []
						}
					],
					"src": "112:7703:2"
				},
				"id": 2
			},
			"src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol": {
				"ast": {
					"absolutePath": "src/Contract Architecture/Core Infrastructure/FarcasterRegistry.sol",
					"exportedSymbols": {
						"ECDSA": [
							525
						],
						"FarcasterRegistry": [
							1400
						],
						"FidAlreadyLinked": [
							547
						],
						"FidNotLinked": [
							549
						],
						"IFarcasterProofVerifier": [
							543
						],
						"InvalidSigner": [
							555
						],
						"NotFidOwner": [
							553
						],
						"Ownable": [
							147
						],
						"OwnerAlreadyLinked": [
							551
						],
						"Replay": [
							559
						],
						"SignatureExpired": [
							557
						],
						"VaultAlreadySet": [
							563
						],
						"VerifierRejected": [
							561
						],
						"ZeroAddress": [
							545
						]
					},
					"id": 1401,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 527,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 529,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1401,
							"sourceUnit": 148,
							"src": "847:67:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 528,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "855:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"id": 531,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1401,
							"sourceUnit": 526,
							"src": "915:75:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 530,
										"name": "ECDSA",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 525,
										"src": "923:5:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IFarcasterProofVerifier",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 543,
							"linearizedBaseContracts": [
								543
							],
							"name": "IFarcasterProofVerifier",
							"nameLocation": "1002:23:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "469b9b71",
									"id": 542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "verifyLink",
									"nameLocation": "1041:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1060:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1052:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "fid",
												"nameLocation": "1075:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1067:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "1095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1080:20:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 536,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1080:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1051:50:3"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1125:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 539,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1125:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:6:3"
									},
									"scope": 543,
									"src": "1032:99:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1401,
							"src": "992:141:3",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"errorSelector": "d92e233d",
							"id": 545,
							"name": "ZeroAddress",
							"nameLocation": "1141:11:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 544,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1152:2:3"
							},
							"src": "1135:20:3"
						},
						{
							"errorSelector": "f9634608",
							"id": 547,
							"name": "FidAlreadyLinked",
							"nameLocation": "1162:16:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 546,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1178:2:3"
							},
							"src": "1156:25:3"
						},
						{
							"errorSelector": "f5275bee",
							"id": 549,
							"name": "FidNotLinked",
							"nameLocation": "1188:12:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 548,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1200:2:3"
							},
							"src": "1182:21:3"
						},
						{
							"errorSelector": "d2cfecdc",
							"id": 551,
							"name": "OwnerAlreadyLinked",
							"nameLocation": "1210:18:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 550,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1228:2:3"
							},
							"src": "1204:27:3"
						},
						{
							"errorSelector": "bbd7da74",
							"id": 553,
							"name": "NotFidOwner",
							"nameLocation": "1238:11:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 552,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1249:2:3"
							},
							"src": "1232:20:3"
						},
						{
							"errorSelector": "815e1d64",
							"id": 555,
							"name": "InvalidSigner",
							"nameLocation": "1259:13:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 554,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1272:2:3"
							},
							"src": "1253:22:3"
						},
						{
							"errorSelector": "0819bdcd",
							"id": 557,
							"name": "SignatureExpired",
							"nameLocation": "1282:16:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 556,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1298:2:3"
							},
							"src": "1276:25:3"
						},
						{
							"errorSelector": "b5a78004",
							"id": 559,
							"name": "Replay",
							"nameLocation": "1308:6:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 558,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1314:2:3"
							},
							"src": "1302:15:3"
						},
						{
							"errorSelector": "d6f42bea",
							"id": 561,
							"name": "VerifierRejected",
							"nameLocation": "1324:16:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 560,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1340:2:3"
							},
							"src": "1318:25:3"
						},
						{
							"errorSelector": "1bb0ddfb",
							"id": 563,
							"name": "VaultAlreadySet",
							"nameLocation": "1350:15:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 562,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1365:2:3"
							},
							"src": "1344:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 564,
										"name": "Ownable",
										"nameLocations": [
											"1400:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "1400:7:3"
									},
									"id": 565,
									"nodeType": "InheritanceSpecifier",
									"src": "1400:7:3"
								}
							],
							"canonicalName": "FarcasterRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1400,
							"linearizedBaseContracts": [
								1400,
								147,
								177
							],
							"name": "FarcasterRegistry",
							"nameLocation": "1379:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 568,
									"libraryName": {
										"id": 566,
										"name": "ECDSA",
										"nameLocations": [
											"1420:5:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 525,
										"src": "1420:5:3"
									},
									"nodeType": "UsingForDirective",
									"src": "1414:24:3",
									"typeName": {
										"id": 567,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1430:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"constant": false,
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "1526:24:3",
										"text": "@notice FID -> owner"
									},
									"functionSelector": "c8b6a983",
									"id": 573,
									"mutability": "mutable",
									"name": "fidToOwner",
									"nameLocation": "1590:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "1555:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 572,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 570,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1563:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1555:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 571,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1574:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "1607:36:3",
										"text": "@notice owner -> FID (0 if none)"
									},
									"functionSelector": "e2cc3d2f",
									"id": 578,
									"mutability": "mutable",
									"name": "ownerToFid",
									"nameLocation": "1683:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "1648:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 577,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 575,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1656:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1648:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 576,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1667:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "1700:55:3",
										"text": "@notice FID -> vault (optional convenience pointer)"
									},
									"functionSelector": "bf74ae26",
									"id": 583,
									"mutability": "mutable",
									"name": "fidToVault",
									"nameLocation": "1795:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "1760:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 582,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 580,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1768:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1760:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 581,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1779:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "1812:42:3",
										"text": "@notice Nonces for EIP-712 (per-owner)"
									},
									"functionSelector": "7ecebe00",
									"id": 588,
									"mutability": "mutable",
									"name": "nonces",
									"nameLocation": "1894:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "1859:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 587,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 585,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1867:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1859:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 586,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1878:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "1907:58:3",
										"text": "@notice Optional external verifier for offchain proofs"
									},
									"functionSelector": "7fa417b3",
									"id": 592,
									"mutability": "mutable",
									"name": "proofVerifier",
									"nameLocation": "2001:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "1970:44:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IFarcasterProofVerifier_$543",
										"typeString": "contract IFarcasterProofVerifier"
									},
									"typeName": {
										"id": 591,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 590,
											"name": "IFarcasterProofVerifier",
											"nameLocations": [
												"1970:23:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 543,
											"src": "1970:23:3"
										},
										"referencedDeclaration": 543,
										"src": "1970:23:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IFarcasterProofVerifier_$543",
											"typeString": "contract IFarcasterProofVerifier"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "3dd7415ea1c3934b25f4a05ee43968c346015575490b276d1e966d862c64816c",
									"id": 600,
									"name": "Linked",
									"nameLocation": "2107:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"indexed": true,
												"mutability": "mutable",
												"name": "fid",
												"nameLocation": "2130:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "2114:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2151:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "2135:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2135:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"indexed": false,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "2166:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "2158:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2113:59:3"
									},
									"src": "2101:72:3"
								},
								{
									"anonymous": false,
									"eventSelector": "40fc318d01f3d2a4260ec6762d8dc27c93240d50d16517be56ffffa806f4940e",
									"id": 606,
									"name": "Unlinked",
									"nameLocation": "2184:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"indexed": true,
												"mutability": "mutable",
												"name": "fid",
												"nameLocation": "2209:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "2193:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2193:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2230:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "2214:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2192:44:3"
									},
									"src": "2178:59:3"
								},
								{
									"anonymous": false,
									"eventSelector": "fb1b10075cb2fabc098c864da78ada292c7b57ddf48e1192434b237194971526",
									"id": 616,
									"name": "Transferred",
									"nameLocation": "2248:11:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"indexed": true,
												"mutability": "mutable",
												"name": "fid",
												"nameLocation": "2276:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "2260:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2260:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nameLocation": "2297:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "2281:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2281:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2323:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "2307:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2307:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"indexed": false,
												"mutability": "mutable",
												"name": "newVault",
												"nameLocation": "2341:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "2333:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2259:91:3"
									},
									"src": "2242:109:3"
								},
								{
									"anonymous": false,
									"eventSelector": "9ba82601182e51f8dd35a545a13e9d8716495ee8d41c4f1b65fc97f97d661927",
									"id": 620,
									"name": "ProofVerifierUpdated",
									"nameLocation": "2362:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"indexed": true,
												"mutability": "mutable",
												"name": "verifier",
												"nameLocation": "2399:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "2383:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:26:3"
									},
									"src": "2356:53:3"
								},
								{
									"constant": false,
									"functionSelector": "3644e515",
									"id": 622,
									"mutability": "immutable",
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2528:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "2503:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 621,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2503:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ddbc4a4b",
									"id": 627,
									"mutability": "constant",
									"name": "LINK_TYPEHASH",
									"nameLocation": "2672:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "2648:137:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 623,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2648:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4c696e6b2861646472657373206f776e65722c75696e74323536206669642c61646472657373207661756c742c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 625,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2706:78:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a678f94f5bffc40cefaf81a99c9b64a42700e1fc99df73ce4ea5b0edb83c6fae",
													"typeString": "literal_string \"Link(address owner,uint256 fid,address vault,uint256 nonce,uint256 deadline)\""
												},
												"value": "Link(address owner,uint256 fid,address vault,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a678f94f5bffc40cefaf81a99c9b64a42700e1fc99df73ce4ea5b0edb83c6fae",
													"typeString": "literal_string \"Link(address owner,uint256 fid,address vault,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 624,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "2696:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 626,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2696:89:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "48bb996c",
									"id": 632,
									"mutability": "constant",
									"name": "UNLINK_TYPEHASH",
									"nameLocation": "2901:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "2877:127:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 628,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2877:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "556e6c696e6b2861646472657373206f776e65722c75696e74323536206669642c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 630,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2937:66:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_c21fcd4c1487e99128bcf2100fe7ade08497b3a0531a3075cec218aa56ef2103",
													"typeString": "literal_string \"Unlink(address owner,uint256 fid,uint256 nonce,uint256 deadline)\""
												},
												"value": "Unlink(address owner,uint256 fid,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_c21fcd4c1487e99128bcf2100fe7ade08497b3a0531a3075cec218aa56ef2103",
													"typeString": "literal_string \"Unlink(address owner,uint256 fid,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 629,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "2927:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 631,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2927:77:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "00bf26f4",
									"id": 637,
									"mutability": "constant",
									"name": "TRANSFER_TYPEHASH",
									"nameLocation": "3156:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 1400,
									"src": "3132:165:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 633,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3132:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5472616e736665722861646472657373206f776e65722c75696e74323536206669642c61646472657373206e65774f776e65722c61646472657373206e65775661756c742c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 635,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3194:102:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_7a00a9d047b8532e87561a4cfa9e3cf48a980f4df0d4fa2e76169a8d4d102dd5",
													"typeString": "literal_string \"Transfer(address owner,uint256 fid,address newOwner,address newVault,uint256 nonce,uint256 deadline)\""
												},
												"value": "Transfer(address owner,uint256 fid,address newOwner,address newVault,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_7a00a9d047b8532e87561a4cfa9e3cf48a980f4df0d4fa2e76169a8d4d102dd5",
													"typeString": "literal_string \"Transfer(address owner,uint256 fid,address newOwner,address newVault,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 634,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "3184:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 636,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3184:113:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "3338:520:3",
										"statements": [
											{
												"assignments": [
													645
												],
												"declarations": [
													{
														"constant": false,
														"id": 645,
														"mutability": "mutable",
														"name": "chainId",
														"nameLocation": "3356:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 676,
														"src": "3348:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 644,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3348:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 646,
												"nodeType": "VariableDeclarationStatement",
												"src": "3348:15:3"
											},
											{
												"AST": {
													"nativeSrc": "3382:44:3",
													"nodeType": "YulBlock",
													"src": "3382:44:3",
													"statements": [
														{
															"nativeSrc": "3396:20:3",
															"nodeType": "YulAssignment",
															"src": "3396:20:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nativeSrc": "3407:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "3407:7:3"
																},
																"nativeSrc": "3407:9:3",
																"nodeType": "YulFunctionCall",
																"src": "3407:9:3"
															},
															"variableNames": [
																{
																	"name": "chainId",
																	"nativeSrc": "3396:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "3396:7:3"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 645,
														"isOffset": false,
														"isSlot": false,
														"src": "3396:7:3",
														"valueSize": 1
													}
												],
												"id": 647,
												"nodeType": "InlineAssembly",
												"src": "3373:53:3"
											},
											{
												"expression": {
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 648,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "3435:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3592:84:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 652,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "3582:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3582:95:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "4661726361737465725265676973747279",
																						"id": 658,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3711:19:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c169911cd6cf046bd7315b2062624bb9ddb2c6ada84d52c042a7fd801e6ae54b",
																							"typeString": "literal_string \"FarcasterRegistry\""
																						},
																						"value": "FarcasterRegistry"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c169911cd6cf046bd7315b2062624bb9ddb2c6ada84d52c042a7fd801e6ae54b",
																							"typeString": "literal_string \"FarcasterRegistry\""
																						}
																					],
																					"id": 657,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3705:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 656,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "3705:5:3",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 659,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3705:26:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 655,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "3695:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3695:37:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "31",
																						"id": 664,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3766:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 663,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3760:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 662,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "3760:5:3",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 665,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3760:10:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 661,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "3750:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3750:21:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 667,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 645,
																		"src": "3789:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 670,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3822:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_FarcasterRegistry_$1400",
																					"typeString": "contract FarcasterRegistry"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_FarcasterRegistry_$1400",
																					"typeString": "contract FarcasterRegistry"
																				}
																			],
																			"id": 669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3814:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 668,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3814:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3814:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 650,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3477:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3481:6:3",
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"src": "3477:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3477:364:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 649,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3454:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3454:397:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3435:416:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "3435:416:3"
											}
										]
									},
									"id": 677,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 640,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3326:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3330:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3326:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 642,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 639,
												"name": "Ownable",
												"nameLocations": [
													"3318:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "3318:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3318:19:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3315:2:3"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3338:0:3"
									},
									"scope": 1400,
									"src": "3304:554:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "4059:111:3",
										"statements": [
											{
												"expression": {
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 685,
														"name": "proofVerifier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "4069:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFarcasterProofVerifier_$543",
															"typeString": "contract IFarcasterProofVerifier"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 687,
																"name": "verifier",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "4109:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 686,
															"name": "IFarcasterProofVerifier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "4085:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IFarcasterProofVerifier_$543_$",
																"typeString": "type(contract IFarcasterProofVerifier)"
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4085:33:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFarcasterProofVerifier_$543",
															"typeString": "contract IFarcasterProofVerifier"
														}
													},
													"src": "4069:49:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFarcasterProofVerifier_$543",
														"typeString": "contract IFarcasterProofVerifier"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "4069:49:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 692,
															"name": "verifier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "4154:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 691,
														"name": "ProofVerifierUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "4133:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4133:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "EmitStatement",
												"src": "4128:35:3"
											}
										]
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "3944:47:3",
										"text": "@notice Set/replace external proof verifier"
									},
									"functionSelector": "df6244db",
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 683,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 682,
												"name": "onlyOwner",
												"nameLocations": [
													"4049:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4049:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4049:9:3"
										}
									],
									"name": "setProofVerifier",
									"nameLocation": "4005:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "verifier",
												"nameLocation": "4030:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "4022:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4021:18:3"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4059:0:3"
									},
									"scope": 1400,
									"src": "3996:174:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "4421:46:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 705,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4437:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4441:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4437:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "fid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "4449:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 708,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "4454:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 704,
														"name": "_link",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "4431:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4431:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 710,
												"nodeType": "ExpressionStatement",
												"src": "4431:29:3"
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "4269:96:3",
										"text": "@notice Link caller as the owner of `fid`, optionally storing a convenience `vault` address."
									},
									"functionSelector": "65af7909",
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "link",
									"nameLocation": "4379:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "fid",
												"nameLocation": "4392:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "4384:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4384:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "4405:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "4397:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4397:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4383:28:3"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4421:0:3"
									},
									"scope": 1400,
									"src": "4370:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "4559:106:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 718,
															"name": "fidToOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "4573:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 720,
														"indexExpression": {
															"id": 719,
															"name": "fid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "4584:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4573:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 721,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4592:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4596:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4592:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4573:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 727,
												"nodeType": "IfStatement",
												"src": "4569:55:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 724,
															"name": "NotFidOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "4611:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4611:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 726,
													"nodeType": "RevertStatement",
													"src": "4604:20:3"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 729,
															"name": "fid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "4642:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 730,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4647:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4651:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4647:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 728,
														"name": "_unlink",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "4634:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4634:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "4634:24:3"
											}
										]
									},
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "4473:43:3",
										"text": "@notice Unlink caller from their `fid`."
									},
									"functionSelector": "f1e023fd",
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unlink",
									"nameLocation": "4530:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "fid",
												"nameLocation": "4545:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4537:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4536:13:3"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4559:0:3"
									},
									"scope": 1400,
									"src": "4521:144:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "4837:128:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 745,
															"name": "fidToOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "4851:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 747,
														"indexExpression": {
															"id": 746,
															"name": "fid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "4862:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4851:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 748,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4870:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4874:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4870:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4851:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 754,
												"nodeType": "IfStatement",
												"src": "4847:55:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 751,
															"name": "NotFidOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "4889:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4889:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 753,
													"nodeType": "RevertStatement",
													"src": "4882:20:3"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 756,
															"name": "fid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "4922:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 757,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4927:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4931:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4927:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 759,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "4939:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 760,
															"name": "newVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "4949:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 755,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "4912:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (uint256,address,address,address)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4912:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "4912:46:3"
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "4671:85:3",
										"text": "@notice Transfer `fid` from caller to `newOwner`, optionally updating `newVault`."
									},
									"functionSelector": "ccb570e3",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4770:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "fid",
												"nameLocation": "4787:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "4779:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "4800:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "4792:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4792:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "newVault",
												"nameLocation": "4818:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "4810:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4810:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:49:3"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4837:0:3"
									},
									"scope": 1400,
									"src": "4761:204:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "5227:170:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 778,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "5252:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 777,
														"name": "_checkDeadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1399,
														"src": "5237:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5237:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 780,
												"nodeType": "ExpressionStatement",
												"src": "5237:24:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 782,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "5286:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 784,
																	"name": "owner_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "5304:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 785,
																	"name": "fid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "5312:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 786,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "5317:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"baseExpression": {
																		"id": 787,
																		"name": "nonces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 588,
																		"src": "5324:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 789,
																	"indexExpression": {
																		"id": 788,
																		"name": "owner_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "5331:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5324:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 790,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 772,
																	"src": "5340:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 783,
																"name": "_hashLink",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1214,
																"src": "5294:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (address,uint256,address,uint256,uint256) view returns (bytes32)"
																}
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5294:55:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 792,
															"name": "sig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "5351:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 781,
														"name": "_verifyAndBump",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "5271:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$",
															"typeString": "function (address,bytes32,bytes calldata)"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5271:84:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 794,
												"nodeType": "ExpressionStatement",
												"src": "5271:84:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 796,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "5371:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 797,
															"name": "fid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "5379:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 798,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "5384:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 795,
														"name": "_link",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "5365:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "5365:25:3"
											}
										]
									},
									"functionSelector": "8989a842",
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "linkWithSig",
									"nameLocation": "5078:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "5107:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "5099:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5099:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "fid",
												"nameLocation": "5131:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "5123:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5123:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "5152:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "5144:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5144:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "5175:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "5167:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5167:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "5208:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "5193:18:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 773,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5193:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5089:128:3"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:3"
									},
									"scope": 1400,
									"src": "5069:328:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "5540:222:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 814,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "5565:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 813,
														"name": "_checkDeadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1399,
														"src": "5550:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5550:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "5550:24:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 818,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "5599:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 820,
																	"name": "owner_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "5619:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 821,
																	"name": "fid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "5627:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"baseExpression": {
																		"id": 822,
																		"name": "nonces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 588,
																		"src": "5632:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 824,
																	"indexExpression": {
																		"id": 823,
																		"name": "owner_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 804,
																		"src": "5639:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5632:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 825,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "5648:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 819,
																"name": "_hashUnlink",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "5607:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (address,uint256,uint256,uint256) view returns (bytes32)"
																}
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5607:50:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 827,
															"name": "sig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "5659:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 817,
														"name": "_verifyAndBump",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "5584:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$",
															"typeString": "function (address,bytes32,bytes calldata)"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5584:79:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "5584:79:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 830,
															"name": "fidToOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "5678:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 832,
														"indexExpression": {
															"id": 831,
															"name": "fid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "5689:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5678:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 833,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "5697:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5678:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 838,
												"nodeType": "IfStatement",
												"src": "5674:51:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 835,
															"name": "NotFidOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "5712:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5712:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 837,
													"nodeType": "RevertStatement",
													"src": "5705:20:3"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 840,
															"name": "fid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "5743:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 841,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "5748:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 839,
														"name": "_unlink",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "5735:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5735:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "5735:20:3"
											}
										]
									},
									"functionSelector": "1d59e7e8",
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unlinkWithSig",
									"nameLocation": "5412:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "5443:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "5435:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5435:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "fid",
												"nameLocation": "5467:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "5459:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5459:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "5488:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "5480:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5480:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "5521:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "5506:18:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 809,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5506:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5425:105:3"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5540:0:3"
									},
									"scope": 1400,
									"src": "5403:359:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "5959:266:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 861,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "5984:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 860,
														"name": "_checkDeadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1399,
														"src": "5969:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5969:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "5969:24:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 865,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "6018:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 867,
																	"name": "owner_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "6040:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 868,
																	"name": "fid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 849,
																	"src": "6048:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 869,
																	"name": "newOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "6053:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 870,
																	"name": "newVault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "6063:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"baseExpression": {
																		"id": 871,
																		"name": "nonces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 588,
																		"src": "6073:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 873,
																	"indexExpression": {
																		"id": 872,
																		"name": "owner_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 847,
																		"src": "6080:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6073:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 874,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "6089:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 866,
																"name": "_hashTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1292,
																"src": "6026:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (address,uint256,address,address,uint256,uint256) view returns (bytes32)"
																}
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6026:72:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 876,
															"name": "sig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "6100:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 864,
														"name": "_verifyAndBump",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "6003:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$",
															"typeString": "function (address,bytes32,bytes calldata)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6003:101:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "6003:101:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 879,
															"name": "fidToOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "6119:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 881,
														"indexExpression": {
															"id": 880,
															"name": "fid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "6130:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6119:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 882,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "6138:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6119:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 887,
												"nodeType": "IfStatement",
												"src": "6115:51:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 884,
															"name": "NotFidOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "6153:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6153:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 886,
													"nodeType": "RevertStatement",
													"src": "6146:20:3"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 889,
															"name": "fid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "6186:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 890,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "6191:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 891,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "6199:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 892,
															"name": "newVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "6209:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 888,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "6176:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (uint256,address,address,address)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6176:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "6176:42:3"
											}
										]
									},
									"functionSelector": "e477c7f7",
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferWithSig",
									"nameLocation": "5777:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "5810:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "5802:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5802:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "fid",
												"nameLocation": "5834:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "5826:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5826:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "5855:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "5847:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5847:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "newVault",
												"nameLocation": "5881:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "5873:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5873:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "5907:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "5899:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5899:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "5940:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "5925:18:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 856,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5925:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5792:157:3"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5959:0:3"
									},
									"scope": 1400,
									"src": "5768:457:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "6586:227:3",
										"statements": [
											{
												"assignments": [
													910
												],
												"declarations": [
													{
														"constant": false,
														"id": 910,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "6620:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 943,
														"src": "6596:25:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFarcasterProofVerifier_$543",
															"typeString": "contract IFarcasterProofVerifier"
														},
														"typeName": {
															"id": 909,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 908,
																"name": "IFarcasterProofVerifier",
																"nameLocations": [
																	"6596:23:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 543,
																"src": "6596:23:3"
															},
															"referencedDeclaration": 543,
															"src": "6596:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFarcasterProofVerifier_$543",
																"typeString": "contract IFarcasterProofVerifier"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 912,
												"initialValue": {
													"id": 911,
													"name": "proofVerifier",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 592,
													"src": "6624:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFarcasterProofVerifier_$543",
														"typeString": "contract IFarcasterProofVerifier"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6596:41:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 915,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "6659:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IFarcasterProofVerifier_$543",
																	"typeString": "contract IFarcasterProofVerifier"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IFarcasterProofVerifier_$543",
																	"typeString": "contract IFarcasterProofVerifier"
																}
															],
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6651:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 913,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6651:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6651:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6673:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6665:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 917,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6665:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6665:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6651:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 925,
												"nodeType": "IfStatement",
												"src": "6647:50:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 922,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "6684:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6684:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 924,
													"nodeType": "RevertStatement",
													"src": "6677:20:3"
												}
											},
											{
												"condition": {
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6711:33:3",
													"subExpression": {
														"arguments": [
															{
																"id": 928,
																"name": "owner_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "6725:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 929,
																"name": "fid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "6733:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 930,
																"name": "proof",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "6738:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"expression": {
																"id": 926,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "6712:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IFarcasterProofVerifier_$543",
																	"typeString": "contract IFarcasterProofVerifier"
																}
															},
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6714:10:3",
															"memberName": "verifyLink",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 542,
															"src": "6712:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (address,uint256,bytes memory) view external returns (bool)"
															}
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6712:32:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 936,
												"nodeType": "IfStatement",
												"src": "6707:64:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 933,
															"name": "VerifierRejected",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "6753:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6753:18:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 935,
													"nodeType": "RevertStatement",
													"src": "6746:25:3"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 938,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "6787:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 939,
															"name": "fid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "6795:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 940,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "6800:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 937,
														"name": "_link",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "6781:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6781:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "6781:25:3"
											}
										]
									},
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "6325:158:3",
										"text": "@notice Link using an external proof verifier (e.g., Warpcast/Neynar signature proof).\n         Callable by anyone; proofVerifier decides validity."
									},
									"functionSelector": "74e48cba",
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "linkWithProof",
									"nameLocation": "6497:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "6519:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "6511:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6511:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "fid",
												"nameLocation": "6535:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "6527:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6527:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "6548:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "6540:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6540:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "6570:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "6555:20:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 904,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6555:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6510:66:3"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6586:0:3"
									},
									"scope": 1400,
									"src": "6488:325:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "6967:39:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 951,
														"name": "fidToOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "6984:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 953,
													"indexExpression": {
														"id": 952,
														"name": "fid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "6995:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6984:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 950,
												"id": 954,
												"nodeType": "Return",
												"src": "6977:22:3"
											}
										]
									},
									"functionSelector": "7b9cf4f3",
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwnerByFid",
									"nameLocation": "6908:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "fid",
												"nameLocation": "6930:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "6922:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6922:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6921:13:3"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "6958:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6958:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6957:9:3"
									},
									"scope": 1400,
									"src": "6899:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "7083:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 963,
														"name": "ownerToFid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "7100:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 965,
													"indexExpression": {
														"id": 964,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "7111:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7100:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 962,
												"id": 966,
												"nodeType": "Return",
												"src": "7093:25:3"
											}
										]
									},
									"functionSelector": "76b3c1be",
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFidByOwner",
									"nameLocation": "7021:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "7043:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "7035:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7035:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7034:16:3"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "7074:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7074:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7073:9:3"
									},
									"scope": 1400,
									"src": "7012:113:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "7199:39:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 975,
														"name": "fidToVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "7216:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 977,
													"indexExpression": {
														"id": 976,
														"name": "fid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "7227:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7216:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 974,
												"id": 978,
												"nodeType": "Return",
												"src": "7209:22:3"
											}
										]
									},
									"functionSelector": "8a62bb16",
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVaultByFid",
									"nameLocation": "7140:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "fid",
												"nameLocation": "7162:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "7154:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7154:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7153:13:3"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "7190:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7190:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7189:9:3"
									},
									"scope": 1400,
									"src": "7131:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "7401:529:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 989,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "7415:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7433:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7425:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 990,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7425:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7425:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7415:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 998,
												"nodeType": "IfStatement",
												"src": "7411:46:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 995,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "7444:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7444:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 997,
													"nodeType": "RevertStatement",
													"src": "7437:20:3"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 999,
														"name": "fid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "7471:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1000,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7478:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7471:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1005,
												"nodeType": "IfStatement",
												"src": "7467:35:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1002,
															"name": "FidNotLinked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "7488:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7488:14:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1004,
													"nodeType": "RevertStatement",
													"src": "7481:21:3"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1006,
															"name": "fidToOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "7534:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1008,
														"indexExpression": {
															"id": 1007,
															"name": "fid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "7545:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7534:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7561:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7553:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1009,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7553:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7553:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7534:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1017,
												"nodeType": "IfStatement",
												"src": "7530:60:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1014,
															"name": "FidAlreadyLinked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "7572:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7572:18:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1016,
													"nodeType": "RevertStatement",
													"src": "7565:25:3"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1018,
															"name": "ownerToFid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "7604:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1020,
														"indexExpression": {
															"id": 1019,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "7615:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7604:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7626:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7604:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1026,
												"nodeType": "IfStatement",
												"src": "7600:56:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1023,
															"name": "OwnerAlreadyLinked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "7636:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7636:20:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1025,
													"nodeType": "RevertStatement",
													"src": "7629:27:3"
												}
											},
											{
												"expression": {
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1027,
															"name": "fidToOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "7667:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1029,
														"indexExpression": {
															"id": 1028,
															"name": "fid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "7678:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7667:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1030,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "7685:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7667:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "7667:24:3"
											},
											{
												"expression": {
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1033,
															"name": "ownerToFid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "7701:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1035,
														"indexExpression": {
															"id": 1034,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "7712:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7701:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1036,
														"name": "fid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "7722:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7701:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "7701:24:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1039,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "7740:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7757:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7749:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1040,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7749:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7749:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7740:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1064,
												"nodeType": "IfStatement",
												"src": "7736:146:3",
												"trueBody": {
													"id": 1063,
													"nodeType": "Block",
													"src": "7761:121:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1045,
																		"name": "fidToVault",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "7779:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 1047,
																	"indexExpression": {
																		"id": 1046,
																		"name": "fid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 984,
																		"src": "7790:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7779:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7806:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7798:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1048,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7798:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7798:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7779:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1056,
															"nodeType": "IfStatement",
															"src": "7775:59:3",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1053,
																		"name": "VaultAlreadySet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 563,
																		"src": "7817:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7817:17:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1055,
																"nodeType": "RevertStatement",
																"src": "7810:24:3"
															}
														},
														{
															"expression": {
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1057,
																		"name": "fidToVault",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "7848:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 1059,
																	"indexExpression": {
																		"id": 1058,
																		"name": "fid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 984,
																		"src": "7859:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7848:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1060,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "7866:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7848:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1062,
															"nodeType": "ExpressionStatement",
															"src": "7848:23:3"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1066,
															"name": "fid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "7904:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1067,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "7909:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1068,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "7917:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1065,
														"name": "Linked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "7897:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (uint256,address,address)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7897:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "EmitStatement",
												"src": "7892:31:3"
											}
										]
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_link",
									"nameLocation": "7342:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "7356:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "7348:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7348:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "fid",
												"nameLocation": "7372:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "7364:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7364:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "7385:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "7377:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7347:44:3"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7401:0:3"
									},
									"scope": 1400,
									"src": "7333:597:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "7991:142:3",
										"statements": [
											{
												"expression": {
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "8001:22:3",
													"subExpression": {
														"baseExpression": {
															"id": 1079,
															"name": "fidToOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "8008:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1081,
														"indexExpression": {
															"id": 1080,
															"name": "fid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "8019:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8008:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "8001:22:3"
											},
											{
												"expression": {
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "8033:22:3",
													"subExpression": {
														"baseExpression": {
															"id": 1084,
															"name": "fidToVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "8040:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1086,
														"indexExpression": {
															"id": 1085,
															"name": "fid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "8051:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8040:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "8033:22:3"
											},
											{
												"expression": {
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "8065:25:3",
													"subExpression": {
														"baseExpression": {
															"id": 1089,
															"name": "ownerToFid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "8072:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1091,
														"indexExpression": {
															"id": 1090,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "8083:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8072:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "8065:25:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1095,
															"name": "fid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "8114:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1096,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "8119:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1094,
														"name": "Unlinked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8105:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8105:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "EmitStatement",
												"src": "8100:26:3"
											}
										]
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unlink",
									"nameLocation": "7945:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "fid",
												"nameLocation": "7961:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "7953:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7953:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "7974:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "7966:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7966:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7952:29:3"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7991:0:3"
									},
									"scope": 1400,
									"src": "7936:197:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "8234:663:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1111,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "8248:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8268:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8260:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1112,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8260:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8260:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8248:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1120,
												"nodeType": "IfStatement",
												"src": "8244:48:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1117,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "8279:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8279:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1119,
													"nodeType": "RevertStatement",
													"src": "8272:20:3"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1121,
															"name": "ownerToFid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "8306:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1123,
														"indexExpression": {
															"id": 1122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "8317:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8306:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8330:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8306:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1129,
												"nodeType": "IfStatement",
												"src": "8302:58:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1126,
															"name": "OwnerAlreadyLinked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "8340:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8340:20:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1128,
													"nodeType": "RevertStatement",
													"src": "8333:27:3"
												}
											},
											{
												"expression": {
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "8400:27:3",
													"subExpression": {
														"baseExpression": {
															"id": 1130,
															"name": "ownerToFid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "8407:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1132,
														"indexExpression": {
															"id": 1131,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "8418:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8407:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "8400:27:3"
											},
											{
												"expression": {
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1135,
															"name": "fidToOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "8465:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1137,
														"indexExpression": {
															"id": 1136,
															"name": "fid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "8476:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8465:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1138,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "8483:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8465:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "8465:26:3"
											},
											{
												"expression": {
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1141,
															"name": "ownerToFid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "8501:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1143,
														"indexExpression": {
															"id": 1142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "8512:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8501:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1144,
														"name": "fid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "8524:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8501:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "8501:26:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1147,
														"name": "newVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "8633:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8653:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8645:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1148,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8645:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8645:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8633:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1165,
													"nodeType": "Block",
													"src": "8714:115:3",
													"statements": [
														{
															"expression": {
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "8796:22:3",
																"subExpression": {
																	"baseExpression": {
																		"id": 1160,
																		"name": "fidToVault",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "8803:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 1162,
																	"indexExpression": {
																		"id": 1161,
																		"name": "fid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "8814:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8803:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1164,
															"nodeType": "ExpressionStatement",
															"src": "8796:22:3"
														}
													]
												},
												"id": 1166,
												"nodeType": "IfStatement",
												"src": "8629:200:3",
												"trueBody": {
													"id": 1159,
													"nodeType": "Block",
													"src": "8657:51:3",
													"statements": [
														{
															"expression": {
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1153,
																		"name": "fidToVault",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "8671:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 1155,
																	"indexExpression": {
																		"id": 1154,
																		"name": "fid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "8682:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8671:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1156,
																	"name": "newVault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "8689:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "8671:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1158,
															"nodeType": "ExpressionStatement",
															"src": "8671:26:3"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1168,
															"name": "fid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "8856:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1169,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "8861:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1170,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "8871:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1171,
															"name": "newVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "8881:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1167,
														"name": "Transferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "8844:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (uint256,address,address,address)"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8844:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1173,
												"nodeType": "EmitStatement",
												"src": "8839:51:3"
											}
										]
									},
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "8148:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "fid",
												"nameLocation": "8166:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "8158:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8158:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "oldOwner",
												"nameLocation": "8179:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "8171:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8171:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "8197:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "8189:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8189:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "newVault",
												"nameLocation": "8215:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "8207:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8207:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8157:67:3"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8234:0:3"
									},
									"scope": 1400,
									"src": "8139:758:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "9167:197:3",
										"statements": [
											{
												"assignments": [
													1191
												],
												"declarations": [
													{
														"constant": false,
														"id": 1191,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "9185:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 1213,
														"src": "9177:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1190,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9177:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1203,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1195,
																	"name": "LINK_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 627,
																	"src": "9219:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1196,
																	"name": "owner_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1177,
																	"src": "9234:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1197,
																	"name": "fid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "9242:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1198,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1181,
																	"src": "9247:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1199,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "9254:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1200,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1185,
																	"src": "9261:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1193,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9208:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9212:6:3",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "9208:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9208:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1192,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "9198:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9198:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9177:94:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9315:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"id": 1208,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "9327:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1209,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1191,
																	"src": "9345:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1205,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9298:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9302:12:3",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "9298:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9298:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1204,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "9288:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9288:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1189,
												"id": 1212,
												"nodeType": "Return",
												"src": "9281:76:3"
											}
										]
									},
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashLink",
									"nameLocation": "9002:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "9029:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "9021:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9021:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "fid",
												"nameLocation": "9053:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "9045:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9045:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "9074:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "9066:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9066:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "9097:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "9089:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9089:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "9120:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "9112:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9112:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9011:123:3"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "9158:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1187,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9158:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9157:9:3"
									},
									"scope": 1400,
									"src": "8993:371:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "9523:192:3",
										"statements": [
											{
												"assignments": [
													1228
												],
												"declarations": [
													{
														"constant": false,
														"id": 1228,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "9541:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 1249,
														"src": "9533:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1227,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9533:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1239,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1232,
																	"name": "UNLINK_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "9575:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1233,
																	"name": "owner_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "9592:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1234,
																	"name": "fid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1218,
																	"src": "9600:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1235,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "9605:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1236,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "9612:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1230,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9564:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9568:6:3",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "9564:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9564:57:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1229,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "9554:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9554:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9533:89:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 1243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9666:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"id": 1244,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "9678:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1245,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1228,
																	"src": "9696:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1241,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9649:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9653:12:3",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "9649:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9649:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1240,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "9639:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9639:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1226,
												"id": 1248,
												"nodeType": "Return",
												"src": "9632:76:3"
											}
										]
									},
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashUnlink",
									"nameLocation": "9379:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "9408:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "9400:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9400:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "fid",
												"nameLocation": "9432:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "9424:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9424:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "9453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "9445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "9476:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "9468:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9468:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9390:100:3"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "9514:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1224,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9514:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9513:9:3"
									},
									"scope": 1400,
									"src": "9370:345:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "9928:226:3",
										"statements": [
											{
												"assignments": [
													1268
												],
												"declarations": [
													{
														"constant": false,
														"id": 1268,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "9946:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 1291,
														"src": "9938:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1267,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9938:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1281,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1272,
																	"name": "TRANSFER_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "9992:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1273,
																	"name": "owner_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "10011:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1274,
																	"name": "fid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1254,
																	"src": "10019:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1275,
																	"name": "newOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "10024:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1276,
																	"name": "newVault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "10034:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1277,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "10044:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1278,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1262,
																	"src": "10051:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1270,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9981:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9985:6:3",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "9981:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9981:79:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1269,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "9971:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9971:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9938:123:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10105:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"id": 1286,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "10117:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1287,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1268,
																	"src": "10135:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1283,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "10088:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "10092:12:3",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "10088:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10088:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1282,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "10078:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10078:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1266,
												"id": 1290,
												"nodeType": "Return",
												"src": "10071:76:3"
											}
										]
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTransfer",
									"nameLocation": "9730:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "9761:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "9753:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9753:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "fid",
												"nameLocation": "9785:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "9777:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9777:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "9806:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "9798:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "newVault",
												"nameLocation": "9832:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "9824:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9824:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "9858:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "9850:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9850:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "9881:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "9873:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9873:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9743:152:3"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "9919:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1264,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9919:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9918:9:3"
									},
									"scope": 1400,
									"src": "9721:433:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "10253:344:3",
										"statements": [
											{
												"assignments": [
													1302,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1302,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "10272:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 1337,
														"src": "10264:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1301,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10264:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1307,
												"initialValue": {
													"arguments": [
														{
															"id": 1304,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "10295:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1305,
															"name": "sig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "10303:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 1303,
														"name": "_recover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1385,
														"src": "10286:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_address_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes calldata) pure returns (address,bytes32)"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10286:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_bytes32_$",
														"typeString": "tuple(address,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10263:44:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1308,
															"name": "recovered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "10321:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10342:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10334:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1309,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10334:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10334:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "10321:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1314,
															"name": "recovered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "10348:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1315,
															"name": "expectedSigner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "10361:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "10348:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10321:54:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1321,
												"nodeType": "IfStatement",
												"src": "10317:82:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1318,
															"name": "InvalidSigner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "10384:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10384:15:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1320,
													"nodeType": "RevertStatement",
													"src": "10377:22:3"
												}
											},
											{
												"assignments": [
													1323
												],
												"declarations": [
													{
														"constant": false,
														"id": 1323,
														"mutability": "mutable",
														"name": "n",
														"nameLocation": "10418:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1337,
														"src": "10410:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1322,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10410:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1327,
												"initialValue": {
													"baseExpression": {
														"id": 1324,
														"name": "nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "10422:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1326,
													"indexExpression": {
														"id": 1325,
														"name": "expectedSigner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "10429:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10422:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10410:34:3"
											},
											{
												"id": 1336,
												"nodeType": "UncheckedBlock",
												"src": "10526:65:3",
												"statements": [
													{
														"expression": {
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1328,
																	"name": "nonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "10550:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1330,
																"indexExpression": {
																	"id": 1329,
																	"name": "expectedSigner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "10557:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10550:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1331,
																	"name": "n",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1323,
																	"src": "10575:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10579:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10575:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10550:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1335,
														"nodeType": "ExpressionStatement",
														"src": "10550:30:3"
													}
												]
											}
										]
									},
									"id": 1338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyAndBump",
									"nameLocation": "10169:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "expectedSigner",
												"nameLocation": "10192:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "10184:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10184:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "10216:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "10208:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1295,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10208:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "10239:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "10224:18:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1297,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10224:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10183:60:3"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10253:0:3"
									},
									"scope": 1400,
									"src": "10160:437:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1384,
										"nodeType": "Block",
										"src": "10698:415:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1349,
															"name": "sig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "10712:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10716:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10712:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "3635",
														"id": 1351,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10726:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "10712:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1363,
												"nodeType": "IfStatement",
												"src": "10708:53:3",
												"trueBody": {
													"expression": {
														"components": [
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10746:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10738:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1353,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10738:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10738:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10758:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10750:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1357,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "10750:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10750:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"id": 1361,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10737:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_bytes32_$",
															"typeString": "tuple(address,bytes32)"
														}
													},
													"functionReturnParameters": 1348,
													"id": 1362,
													"nodeType": "Return",
													"src": "10730:31:3"
												}
											},
											{
												"assignments": [
													1365
												],
												"declarations": [
													{
														"constant": false,
														"id": 1365,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "10779:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1384,
														"src": "10771:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1364,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10771:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1366,
												"nodeType": "VariableDeclarationStatement",
												"src": "10771:9:3"
											},
											{
												"assignments": [
													1368
												],
												"declarations": [
													{
														"constant": false,
														"id": 1368,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "10798:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1384,
														"src": "10790:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1367,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10790:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1369,
												"nodeType": "VariableDeclarationStatement",
												"src": "10790:9:3"
											},
											{
												"assignments": [
													1371
												],
												"declarations": [
													{
														"constant": false,
														"id": 1371,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "10815:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1384,
														"src": "10809:7:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1370,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "10809:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1372,
												"nodeType": "VariableDeclarationStatement",
												"src": "10809:7:3"
											},
											{
												"AST": {
													"nativeSrc": "10891:164:3",
													"nodeType": "YulBlock",
													"src": "10891:164:3",
													"statements": [
														{
															"nativeSrc": "10905:29:3",
															"nodeType": "YulAssignment",
															"src": "10905:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "sig.offset",
																		"nativeSrc": "10923:10:3",
																		"nodeType": "YulIdentifier",
																		"src": "10923:10:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10910:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "10910:12:3"
																},
																"nativeSrc": "10910:24:3",
																"nodeType": "YulFunctionCall",
																"src": "10910:24:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10905:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "10905:1:3"
																}
															]
														},
														{
															"nativeSrc": "10947:38:3",
															"nodeType": "YulAssignment",
															"src": "10947:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "sig.offset",
																				"nativeSrc": "10969:10:3",
																				"nodeType": "YulIdentifier",
																				"src": "10969:10:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10981:2:3",
																				"nodeType": "YulLiteral",
																				"src": "10981:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10965:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "10965:3:3"
																		},
																		"nativeSrc": "10965:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10965:19:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10952:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "10952:12:3"
																},
																"nativeSrc": "10952:33:3",
																"nodeType": "YulFunctionCall",
																"src": "10952:33:3"
															},
															"variableNames": [
																{
																	"name": "s",
																	"nativeSrc": "10947:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "10947:1:3"
																}
															]
														},
														{
															"nativeSrc": "10998:47:3",
															"nodeType": "YulAssignment",
															"src": "10998:47:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11008:1:3",
																		"nodeType": "YulLiteral",
																		"src": "11008:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "sig.offset",
																						"nativeSrc": "11028:10:3",
																						"nodeType": "YulIdentifier",
																						"src": "11028:10:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11040:2:3",
																						"nodeType": "YulLiteral",
																						"src": "11040:2:3",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11024:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "11024:3:3"
																				},
																				"nativeSrc": "11024:19:3",
																				"nodeType": "YulFunctionCall",
																				"src": "11024:19:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11011:12:3",
																			"nodeType": "YulIdentifier",
																			"src": "11011:12:3"
																		},
																		"nativeSrc": "11011:33:3",
																		"nodeType": "YulFunctionCall",
																		"src": "11011:33:3"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nativeSrc": "11003:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "11003:4:3"
																},
																"nativeSrc": "11003:42:3",
																"nodeType": "YulFunctionCall",
																"src": "11003:42:3"
															},
															"variableNames": [
																{
																	"name": "v",
																	"nativeSrc": "10998:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "10998:1:3"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1365,
														"isOffset": false,
														"isSlot": false,
														"src": "10905:1:3",
														"valueSize": 1
													},
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": false,
														"src": "10947:1:3",
														"valueSize": 1
													},
													{
														"declaration": 1342,
														"isOffset": true,
														"isSlot": false,
														"src": "10923:10:3",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 1342,
														"isOffset": true,
														"isSlot": false,
														"src": "10969:10:3",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 1342,
														"isOffset": true,
														"isSlot": false,
														"src": "11028:10:3",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 1371,
														"isOffset": false,
														"isSlot": false,
														"src": "10998:1:3",
														"valueSize": 1
													}
												],
												"id": 1373,
												"nodeType": "InlineAssembly",
												"src": "10882:173:3"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 1376,
																	"name": "digest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1340,
																	"src": "11086:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1377,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1371,
																	"src": "11094:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 1378,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1365,
																	"src": "11097:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1379,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1368,
																	"src": "11100:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1374,
																	"name": "ECDSA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "11072:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ECDSA_$525_$",
																		"typeString": "type(library ECDSA)"
																	}
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11078:7:3",
																"memberName": "recover",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 475,
																"src": "11072:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																}
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11072:30:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1381,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "11104:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 1382,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "11071:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_bytes32_$",
														"typeString": "tuple(address,bytes32)"
													}
												},
												"functionReturnParameters": 1348,
												"id": 1383,
												"nodeType": "Return",
												"src": "11064:42:3"
											}
										]
									},
									"id": 1385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_recover",
									"nameLocation": "10612:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "10629:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "10621:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1339,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "10652:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "10637:18:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1341,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10637:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10620:36:3"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "10680:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10680:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "10689:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1346,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10689:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10679:18:3"
									},
									"scope": 1400,
									"src": "10603:510:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1398,
										"nodeType": "Block",
										"src": "11175:74:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1390,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "11189:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11195:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "11189:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1392,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1387,
														"src": "11207:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11189:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1397,
												"nodeType": "IfStatement",
												"src": "11185:57:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1394,
															"name": "SignatureExpired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "11224:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11224:18:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1396,
													"nodeType": "RevertStatement",
													"src": "11217:25:3"
												}
											}
										]
									},
									"id": 1399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkDeadline",
									"nameLocation": "11128:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "11151:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "11143:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11143:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11142:18:3"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11175:0:3"
									},
									"scope": 1400,
									"src": "11119:130:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1401,
							"src": "1370:9881:3",
							"usedErrors": [
								13,
								18,
								188,
								193,
								198,
								545,
								547,
								549,
								551,
								553,
								555,
								557,
								561,
								563
							],
							"usedEvents": [
								24,
								600,
								606,
								616,
								620
							]
						}
					],
					"src": "32:11220:3"
				},
				"id": 3
			}
		}
	}
}